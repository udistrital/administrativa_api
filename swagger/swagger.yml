swagger: "2.0"
info:
  title: beego Test API
  description: beego has a very cool tools to autogenerate documents for your API
  version: 1.0.0
  termsOfService: http://beego.me/
  contact:
    email: astaxie@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
basePath: /v1
paths:
  /acta_inicio/:
    get:
      tags:
      - acta_inicio
      description: get ActaInicio
      operationId: ActaInicioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaInicio'
        "404":
          description: not found resource
    post:
      tags:
      - acta_inicio
      description: create ActaInicio
      operationId: ActaInicioController.Post
      parameters:
      - in: body
        name: body
        description: body for ActaInicio content
        required: true
        schema:
          $ref: '#/definitions/models.ActaInicio'
      responses:
        "201":
          description: '{int} models.ActaInicio'
        "400":
          description: the request contains incorrect syntax
  /acta_inicio/{id}:
    get:
      tags:
      - acta_inicio
      description: get ActaInicio by id
      operationId: ActaInicioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaInicio'
        "404":
          description: not found resource
    put:
      tags:
      - acta_inicio
      description: update the ActaInicio
      operationId: ActaInicioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActaInicio content
        required: true
        schema:
          $ref: '#/definitions/models.ActaInicio'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaInicio'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - acta_inicio
      description: delete the ActaInicio
      operationId: ActaInicioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /acta_recibido/:
    get:
      tags:
      - acta_recibido
      description: get ActaRecibido
      operationId: ActaRecibidoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaRecibido'
        "404":
          description: not found resource
    post:
      tags:
      - acta_recibido
      description: create ActaRecibido
      operationId: ActaRecibidoController.Post
      parameters:
      - in: body
        name: body
        description: body for ActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.ActaRecibido'
      responses:
        "201":
          description: '{int} models.ActaRecibido'
        "400":
          description: the request contains incorrect syntax
  /acta_recibido/{id}:
    get:
      tags:
      - acta_recibido
      description: get ActaRecibido by id
      operationId: ActaRecibidoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaRecibido'
        "404":
          description: not found resource
    put:
      tags:
      - acta_recibido
      description: update the ActaRecibido
      operationId: ActaRecibidoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.ActaRecibido'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActaRecibido'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - acta_recibido
      description: delete the ActaRecibido
      operationId: ActaRecibidoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /actividad_economica_necesidad/:
    get:
      tags:
      - actividad_economica_necesidad
      description: get ActividadEconomicaNecesidad
      operationId: ActividadEconomicaNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActividadEconomicaNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - actividad_economica_necesidad
      description: create ActividadEconomicaNecesidad
      operationId: ActividadEconomicaNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for ActividadEconomicaNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadEconomicaNecesidad'
      responses:
        "201":
          description: '{int} models.ActividadEconomicaNecesidad'
        "400":
          description: the request contains incorrect syntax
  /actividad_economica_necesidad/{id}:
    get:
      tags:
      - actividad_economica_necesidad
      description: get ActividadEconomicaNecesidad by id
      operationId: ActividadEconomicaNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActividadEconomicaNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - actividad_economica_necesidad
      description: update the ActividadEconomicaNecesidad
      operationId: ActividadEconomicaNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActividadEconomicaNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadEconomicaNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActividadEconomicaNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - actividad_economica_necesidad
      description: delete the ActividadEconomicaNecesidad
      operationId: ActividadEconomicaNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /actividad_especifica/:
    get:
      tags:
      - actividad_especifica
      description: get ActividadEspecifica
      operationId: ActividadEspecificaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActividadEspecifica'
        "404":
          description: not found resource
    post:
      tags:
      - actividad_especifica
      description: create ActividadEspecifica
      operationId: ActividadEspecificaController.Post
      parameters:
      - in: body
        name: body
        description: body for ActividadEspecifica content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadEspecifica'
      responses:
        "201":
          description: '{int} models.ActividadEspecifica'
        "400":
          description: the request contains incorrect syntax
  /actividad_especifica/{id}:
    get:
      tags:
      - actividad_especifica
      description: get ActividadEspecifica by id
      operationId: ActividadEspecificaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActividadEspecifica'
        "404":
          description: not found resource
    put:
      tags:
      - actividad_especifica
      description: update the ActividadEspecifica
      operationId: ActividadEspecificaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ActividadEspecifica content
        required: true
        schema:
          $ref: '#/definitions/models.ActividadEspecifica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ActividadEspecifica'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - actividad_especifica
      description: delete the ActividadEspecifica
      operationId: ActividadEspecificaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /amortizacion_elemento/:
    get:
      tags:
      - amortizacion_elemento
      description: get AmortizacionElemento
      operationId: AmortizacionElementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AmortizacionElemento'
        "404":
          description: not found resource
    post:
      tags:
      - amortizacion_elemento
      description: create AmortizacionElemento
      operationId: AmortizacionElementoController.Post
      parameters:
      - in: body
        name: body
        description: body for AmortizacionElemento content
        required: true
        schema:
          $ref: '#/definitions/models.AmortizacionElemento'
      responses:
        "201":
          description: '{int} models.AmortizacionElemento'
        "400":
          description: the request contains incorrect syntax
  /amortizacion_elemento/{id}:
    get:
      tags:
      - amortizacion_elemento
      description: get AmortizacionElemento by id
      operationId: AmortizacionElementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AmortizacionElemento'
        "404":
          description: not found resource
    put:
      tags:
      - amortizacion_elemento
      description: update the AmortizacionElemento
      operationId: AmortizacionElementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AmortizacionElemento content
        required: true
        schema:
          $ref: '#/definitions/models.AmortizacionElemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AmortizacionElemento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - amortizacion_elemento
      description: delete the AmortizacionElemento
      operationId: AmortizacionElementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /amparo_contractual/:
    get:
      tags:
      - amparo_contractual
      description: get AmparoContractual
      operationId: AmparoContractualController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AmparoContractual'
        "404":
          description: not found resource
    post:
      tags:
      - amparo_contractual
      description: create AmparoContractual
      operationId: AmparoContractualController.Post
      parameters:
      - in: body
        name: body
        description: body for AmparoContractual content
        required: true
        schema:
          $ref: '#/definitions/models.AmparoContractual'
      responses:
        "201":
          description: '{int} models.AmparoContractual'
        "400":
          description: the request contains incorrect syntax
  /amparo_contractual/{id}:
    get:
      tags:
      - amparo_contractual
      description: get AmparoContractual by id
      operationId: AmparoContractualController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AmparoContractual'
        "404":
          description: not found resource
    put:
      tags:
      - amparo_contractual
      description: update the AmparoContractual
      operationId: AmparoContractualController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AmparoContractual content
        required: true
        schema:
          $ref: '#/definitions/models.AmparoContractual'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AmparoContractual'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - amparo_contractual
      description: delete the AmparoContractual
      operationId: AmparoContractualController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /asignacion_pension_user_role/:
    get:
      tags:
      - asignacion_pension_user_role
      description: get AsignacionPensionUserRole
      operationId: AsignacionPensionUserRoleController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AsignacionPensionUserRole'
        "404":
          description: not found resource
    post:
      tags:
      - asignacion_pension_user_role
      description: create AsignacionPensionUserRole
      operationId: AsignacionPensionUserRoleController.Post
      parameters:
      - in: body
        name: body
        description: body for AsignacionPensionUserRole content
        required: true
        schema:
          $ref: '#/definitions/models.AsignacionPensionUserRole'
      responses:
        "201":
          description: '{int} models.AsignacionPensionUserRole'
        "400":
          description: the request contains incorrect syntax
  /asignacion_pension_user_role/{id}:
    get:
      tags:
      - asignacion_pension_user_role
      description: get AsignacionPensionUserRole by id
      operationId: AsignacionPensionUserRoleController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AsignacionPensionUserRole'
        "404":
          description: not found resource
    put:
      tags:
      - asignacion_pension_user_role
      description: update the AsignacionPensionUserRole
      operationId: AsignacionPensionUserRoleController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AsignacionPensionUserRole content
        required: true
        schema:
          $ref: '#/definitions/models.AsignacionPensionUserRole'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AsignacionPensionUserRole'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - asignacion_pension_user_role
      description: delete the AsignacionPensionUserRole
      operationId: AsignacionPensionUserRoleController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /atributo_recurso/:
    get:
      tags:
      - atributo_recurso
      description: get AtributoRecurso
      operationId: AtributoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AtributoRecurso'
        "404":
          description: not found resource
    post:
      tags:
      - atributo_recurso
      description: create AtributoRecurso
      operationId: AtributoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for AtributoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.AtributoRecurso'
      responses:
        "201":
          description: '{int} models.AtributoRecurso'
        "400":
          description: the request contains incorrect syntax
  /atributo_recurso/{id}:
    get:
      tags:
      - atributo_recurso
      description: get AtributoRecurso by id
      operationId: AtributoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AtributoRecurso'
        "404":
          description: not found resource
    put:
      tags:
      - atributo_recurso
      description: update the AtributoRecurso
      operationId: AtributoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for AtributoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.AtributoRecurso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.AtributoRecurso'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - atributo_recurso
      description: delete the AtributoRecurso
      operationId: AtributoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /bodega/:
    get:
      tags:
      - bodega
      description: get Bodega
      operationId: BodegaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Bodega'
        "404":
          description: not found resource
    post:
      tags:
      - bodega
      description: create Bodega
      operationId: BodegaController.Post
      parameters:
      - in: body
        name: body
        description: body for Bodega content
        required: true
        schema:
          $ref: '#/definitions/models.Bodega'
      responses:
        "201":
          description: '{int} models.Bodega'
        "400":
          description: the request contains incorrect syntax
  /bodega/{id}:
    get:
      tags:
      - bodega
      description: get Bodega by id
      operationId: BodegaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Bodega'
        "404":
          description: not found resource
    put:
      tags:
      - bodega
      description: update the Bodega
      operationId: BodegaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Bodega content
        required: true
        schema:
          $ref: '#/definitions/models.Bodega'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Bodega'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - bodega
      description: delete the Bodega
      operationId: BodegaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /bodega_salida_bodega/:
    get:
      tags:
      - bodega_salida_bodega
      description: get BodegaSalidaBodega
      operationId: BodegaSalidaBodegaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.BodegaSalidaBodega'
        "404":
          description: not found resource
    post:
      tags:
      - bodega_salida_bodega
      description: create BodegaSalidaBodega
      operationId: BodegaSalidaBodegaController.Post
      parameters:
      - in: body
        name: body
        description: body for BodegaSalidaBodega content
        required: true
        schema:
          $ref: '#/definitions/models.BodegaSalidaBodega'
      responses:
        "201":
          description: '{int} models.BodegaSalidaBodega'
        "400":
          description: the request contains incorrect syntax
  /bodega_salida_bodega/{id}:
    get:
      tags:
      - bodega_salida_bodega
      description: get BodegaSalidaBodega by id
      operationId: BodegaSalidaBodegaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.BodegaSalidaBodega'
        "404":
          description: not found resource
    put:
      tags:
      - bodega_salida_bodega
      description: update the BodegaSalidaBodega
      operationId: BodegaSalidaBodegaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for BodegaSalidaBodega content
        required: true
        schema:
          $ref: '#/definitions/models.BodegaSalidaBodega'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.BodegaSalidaBodega'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - bodega_salida_bodega
      description: delete the BodegaSalidaBodega
      operationId: BodegaSalidaBodegaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /cambio_vida_util/:
    get:
      tags:
      - cambio_vida_util
      description: get CambioVidaUtil
      operationId: CambioVidaUtilController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CambioVidaUtil'
        "404":
          description: not found resource
    post:
      tags:
      - cambio_vida_util
      description: create CambioVidaUtil
      operationId: CambioVidaUtilController.Post
      parameters:
      - in: body
        name: body
        description: body for CambioVidaUtil content
        required: true
        schema:
          $ref: '#/definitions/models.CambioVidaUtil'
      responses:
        "201":
          description: '{int} models.CambioVidaUtil'
        "400":
          description: the request contains incorrect syntax
  /cambio_vida_util/{id}:
    get:
      tags:
      - cambio_vida_util
      description: get CambioVidaUtil by id
      operationId: CambioVidaUtilController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CambioVidaUtil'
        "404":
          description: not found resource
    put:
      tags:
      - cambio_vida_util
      description: update the CambioVidaUtil
      operationId: CambioVidaUtilController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CambioVidaUtil content
        required: true
        schema:
          $ref: '#/definitions/models.CambioVidaUtil'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CambioVidaUtil'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - cambio_vida_util
      description: delete the CambioVidaUtil
      operationId: CambioVidaUtilController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /catalogo/:
    get:
      tags:
      - catalogo
      description: get Catalogo
      operationId: CatalogoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Catalogo'
        "404":
          description: not found resource
    post:
      tags:
      - catalogo
      description: create Catalogo
      operationId: CatalogoController.Post
      parameters:
      - in: body
        name: body
        description: body for Catalogo content
        required: true
        schema:
          $ref: '#/definitions/models.Catalogo'
      responses:
        "201":
          description: '{int} models.Catalogo'
        "400":
          description: the request contains incorrect syntax
  /catalogo/{id}:
    get:
      tags:
      - catalogo
      description: get Catalogo by id
      operationId: CatalogoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Catalogo'
        "404":
          description: not found resource
    put:
      tags:
      - catalogo
      description: update the Catalogo
      operationId: CatalogoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Catalogo content
        required: true
        schema:
          $ref: '#/definitions/models.Catalogo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Catalogo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - catalogo
      description: delete the Catalogo
      operationId: CatalogoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /catalogo_elemento/:
    get:
      tags:
      - catalogo_elemento
      description: get CatalogoElemento
      operationId: CatalogoElementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CatalogoElemento'
        "404":
          description: not found resource
    post:
      tags:
      - catalogo_elemento
      description: create CatalogoElemento
      operationId: CatalogoElementoController.Post
      parameters:
      - in: body
        name: body
        description: body for CatalogoElemento content
        required: true
        schema:
          $ref: '#/definitions/models.CatalogoElemento'
      responses:
        "201":
          description: '{int} models.CatalogoElemento'
        "400":
          description: the request contains incorrect syntax
  /catalogo_elemento/{id}:
    get:
      tags:
      - catalogo_elemento
      description: get CatalogoElemento by id
      operationId: CatalogoElementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CatalogoElemento'
        "404":
          description: not found resource
    put:
      tags:
      - catalogo_elemento
      description: update the CatalogoElemento
      operationId: CatalogoElementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CatalogoElemento content
        required: true
        schema:
          $ref: '#/definitions/models.CatalogoElemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CatalogoElemento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - catalogo_elemento
      description: delete the CatalogoElemento
      operationId: CatalogoElementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /catalogo_elemento_grupo/:
    get:
      tags:
      - catalogo_elemento_grupo
      description: get CatalogoElementoGrupo
      operationId: CatalogoElementoGrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CatalogoElementoGrupo'
        "404":
          description: not found resource
    post:
      tags:
      - catalogo_elemento_grupo
      description: create CatalogoElementoGrupo
      operationId: CatalogoElementoGrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for CatalogoElementoGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.CatalogoElementoGrupo'
      responses:
        "201":
          description: '{int} models.CatalogoElementoGrupo'
        "400":
          description: the request contains incorrect syntax
  /catalogo_elemento_grupo/{id}:
    get:
      tags:
      - catalogo_elemento_grupo
      description: get CatalogoElementoGrupo by id
      operationId: CatalogoElementoGrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CatalogoElementoGrupo'
        "404":
          description: not found resource
    put:
      tags:
      - catalogo_elemento_grupo
      description: update the CatalogoElementoGrupo
      operationId: CatalogoElementoGrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for CatalogoElementoGrupo content
        required: true
        schema:
          $ref: '#/definitions/models.CatalogoElementoGrupo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.CatalogoElementoGrupo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - catalogo_elemento_grupo
      description: delete the CatalogoElementoGrupo
      operationId: CatalogoElementoGrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /componente_resolucion/:
    get:
      tags:
      - componente_resolucion
      description: get ComponenteResolucion
      operationId: ComponenteResolucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponenteResolucion'
        "404":
          description: not found resource
    post:
      tags:
      - componente_resolucion
      description: create ComponenteResolucion
      operationId: ComponenteResolucionController.Post
      parameters:
      - in: body
        name: body
        description: body for ComponenteResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.ComponenteResolucion'
      responses:
        "201":
          description: '{int} models.ComponenteResolucion'
        "400":
          description: the request contains incorrect syntax
  /componente_resolucion/{id}:
    get:
      tags:
      - componente_resolucion
      description: get ComponenteResolucion by id
      operationId: ComponenteResolucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponenteResolucion'
        "404":
          description: not found resource
    put:
      tags:
      - componente_resolucion
      description: update the ComponenteResolucion
      operationId: ComponenteResolucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ComponenteResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.ComponenteResolucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ComponenteResolucion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - componente_resolucion
      description: delete the ComponenteResolucion
      operationId: ComponenteResolucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /concepto_nomina/:
    get:
      tags:
      - concepto_nomina
      description: get ConceptoNomina
      operationId: ConceptoNominaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConceptoNomina'
        "404":
          description: not found resource
    post:
      tags:
      - concepto_nomina
      description: create ConceptoNomina
      operationId: ConceptoNominaController.Post
      parameters:
      - in: body
        name: body
        description: body for ConceptoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoNomina'
      responses:
        "201":
          description: '{int} models.ConceptoNomina'
        "400":
          description: the request contains incorrect syntax
  /concepto_nomina/{id}:
    get:
      tags:
      - concepto_nomina
      description: get ConceptoNomina by id
      operationId: ConceptoNominaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConceptoNomina'
        "404":
          description: not found resource
    put:
      tags:
      - concepto_nomina
      description: update the ConceptoNomina
      operationId: ConceptoNominaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ConceptoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoNomina'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConceptoNomina'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - concepto_nomina
      description: delete the ConceptoNomina
      operationId: ConceptoNominaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /concepto_nomina_por_persona/:
    get:
      tags:
      - concepto_nomina_por_persona
      description: get ConceptoNominaPorPersona
      operationId: ConceptoNominaPorPersonaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConceptoNominaPorPersona'
        "404":
          description: not found resource
    post:
      tags:
      - concepto_nomina_por_persona
      description: create ConceptoNominaPorPersona
      operationId: ConceptoNominaPorPersonaController.Post
      parameters:
      - in: body
        name: body
        description: body for ConceptoNominaPorPersona content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoNominaPorPersona'
      responses:
        "201":
          description: '{int} models.ConceptoNominaPorPersona'
        "400":
          description: the request contains incorrect syntax
  /concepto_nomina_por_persona/{id}:
    get:
      tags:
      - concepto_nomina_por_persona
      description: get ConceptoNominaPorPersona by id
      operationId: ConceptoNominaPorPersonaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConceptoNominaPorPersona'
        "404":
          description: not found resource
    put:
      tags:
      - concepto_nomina_por_persona
      description: update the ConceptoNominaPorPersona
      operationId: ConceptoNominaPorPersonaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ConceptoNominaPorPersona content
        required: true
        schema:
          $ref: '#/definitions/models.ConceptoNominaPorPersona'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ConceptoNominaPorPersona'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - concepto_nomina_por_persona
      description: delete the ConceptoNominaPorPersona
      operationId: ConceptoNominaPorPersonaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /contenido_resolucion/{idResolucion}:
    get:
      tags:
      - contenido_resolucion
      description: get ResolucionCompleta by id
      operationId: ResolucionCompletaController.Get One
      parameters:
      - in: path
        name: idResolucion
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionCompleta'
        "403":
          description: :idResolucion is empty
    put:
      tags:
      - contenido_resolucion
      description: update the ResolucionCompleta
      operationId: ResolucionCompletaController.Put
      parameters:
      - in: path
        name: idResolucion
        description: The id you want to update
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionCompleta'
        "403":
          description: :idResolucion is not int
  /contenido_resolucion/ResolucionTemplate/{dedicacion}/{nivel}/{periodo}/{tipo}/{numero}:
    get:
      tags:
      - contenido_resolucion
      description: get ResolucionCompleta by id
      operationId: ResolucionCompletaController.Get Template
      parameters:
      - in: path
        name: dedicacion
        description: nombre de la dedicacion
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionCompleta'
        "403":
          description: ""
  /contrato/:
    get:
      tags:
      - contrato
      description: get Contrato
      operationId: ContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Contrato'
        "404":
          description: not found resource
    post:
      tags:
      - contrato
      description: create Contrato
      operationId: ContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for Contrato content
        required: true
        schema:
          $ref: '#/definitions/models.Contrato'
      responses:
        "201":
          description: '{int} models.Contrato'
        "400":
          description: the request contains incorrect syntax
  /contrato/{id}:
    get:
      tags:
      - contrato
      description: get Contrato by id
      operationId: ContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Contrato'
        "404":
          description: not found resource
    put:
      tags:
      - contrato
      description: update the Contrato
      operationId: ContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Contrato content
        required: true
        schema:
          $ref: '#/definitions/models.Contrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Contrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - contrato
      description: delete the Contrato
      operationId: ContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /contrato_disponibilidad/:
    get:
      tags:
      - contrato_disponibilidad
      description: get ContratoDisponibilidad
      operationId: ContratoDisponibilidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoDisponibilidad'
        "404":
          description: not found resource
    post:
      tags:
      - contrato_disponibilidad
      description: create ContratoDisponibilidad
      operationId: ContratoDisponibilidadController.Post
      parameters:
      - in: body
        name: body
        description: body for ContratoDisponibilidad content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoDisponibilidad'
      responses:
        "201":
          description: '{int} models.ContratoDisponibilidad'
        "400":
          description: the request contains incorrect syntax
  /contrato_disponibilidad/{id}:
    get:
      tags:
      - contrato_disponibilidad
      description: get ContratoDisponibilidad by id
      operationId: ContratoDisponibilidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoDisponibilidad'
        "404":
          description: not found resource
    put:
      tags:
      - contrato_disponibilidad
      description: update the ContratoDisponibilidad
      operationId: ContratoDisponibilidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContratoDisponibilidad content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoDisponibilidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoDisponibilidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - contrato_disponibilidad
      description: delete the ContratoDisponibilidad
      operationId: ContratoDisponibilidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /contrato_elemento_acta_recibido/:
    get:
      tags:
      - contrato_elemento_acta_recibido
      description: get ContratoElementoActaRecibido
      operationId: ContratoElementoActaRecibidoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoElementoActaRecibido'
        "404":
          description: not found resource
    post:
      tags:
      - contrato_elemento_acta_recibido
      description: create ContratoElementoActaRecibido
      operationId: ContratoElementoActaRecibidoController.Post
      parameters:
      - in: body
        name: body
        description: body for ContratoElementoActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoElementoActaRecibido'
      responses:
        "201":
          description: '{int} models.ContratoElementoActaRecibido'
        "400":
          description: the request contains incorrect syntax
  /contrato_elemento_acta_recibido/{id}:
    get:
      tags:
      - contrato_elemento_acta_recibido
      description: get ContratoElementoActaRecibido by id
      operationId: ContratoElementoActaRecibidoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoElementoActaRecibido'
        "404":
          description: not found resource
    put:
      tags:
      - contrato_elemento_acta_recibido
      description: update the ContratoElementoActaRecibido
      operationId: ContratoElementoActaRecibidoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContratoElementoActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoElementoActaRecibido'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoElementoActaRecibido'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - contrato_elemento_acta_recibido
      description: delete the ContratoElementoActaRecibido
      operationId: ContratoElementoActaRecibidoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /contrato_estado/:
    get:
      tags:
      - contrato_estado
      description: get ContratoEstado
      operationId: ContratoEstadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoEstado'
        "404":
          description: not found resource
    post:
      tags:
      - contrato_estado
      description: create ContratoEstado
      operationId: ContratoEstadoController.Post
      parameters:
      - in: body
        name: body
        description: body for ContratoEstado content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoEstado'
      responses:
        "201":
          description: '{int} models.ContratoEstado'
        "400":
          description: the request contains incorrect syntax
  /contrato_estado/{id}:
    get:
      tags:
      - contrato_estado
      description: get ContratoEstado by id
      operationId: ContratoEstadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoEstado'
        "404":
          description: not found resource
    put:
      tags:
      - contrato_estado
      description: update the ContratoEstado
      operationId: ContratoEstadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContratoEstado content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoEstado'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoEstado'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - contrato_estado
      description: delete the ContratoEstado
      operationId: ContratoEstadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /contrato_general/:
    get:
      tags:
      - contrato_general
      description: get ContratoGeneral
      operationId: ContratoGeneralController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoGeneral'
        "404":
          description: not found resource
    post:
      tags:
      - contrato_general
      description: create ContratoGeneral
      operationId: ContratoGeneralController.Post
      parameters:
      - in: body
        name: body
        description: body for ContratoGeneral content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoGeneral'
      responses:
        "201":
          description: '{int} models.ContratoGeneral'
        "400":
          description: the request contains incorrect syntax
  /contrato_general/{id}:
    get:
      tags:
      - contrato_general
      description: get ContratoGeneral by id
      operationId: ContratoGeneralController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoGeneral'
        "404":
          description: not found resource
    put:
      tags:
      - contrato_general
      description: update the ContratoGeneral
      operationId: ContratoGeneralController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ContratoGeneral content
        required: true
        schema:
          $ref: '#/definitions/models.ContratoGeneral'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ContratoGeneral'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - contrato_general
      description: delete the ContratoGeneral
      operationId: ContratoGeneralController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /dedicacion/:
    get:
      tags:
      - dedicacion
      description: get Dedicacion
      operationId: DedicacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Dedicacion'
        "404":
          description: not found resource
    post:
      tags:
      - dedicacion
      description: create Dedicacion
      operationId: DedicacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Dedicacion content
        required: true
        schema:
          $ref: '#/definitions/models.Dedicacion'
      responses:
        "201":
          description: '{int} models.Dedicacion'
        "400":
          description: the request contains incorrect syntax
  /dedicacion/{id}:
    get:
      tags:
      - dedicacion
      description: get Dedicacion by id
      operationId: DedicacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Dedicacion'
        "404":
          description: not found resource
    put:
      tags:
      - dedicacion
      description: update the Dedicacion
      operationId: DedicacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Dedicacion content
        required: true
        schema:
          $ref: '#/definitions/models.Dedicacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Dedicacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - dedicacion
      description: delete the Dedicacion
      operationId: DedicacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /dependencia_necesidad/:
    get:
      tags:
      - dependencia_necesidad
      description: get DependenciaNecesidad
      operationId: DependenciaNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DependenciaNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - dependencia_necesidad
      description: create DependenciaNecesidad
      operationId: DependenciaNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for DependenciaNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.DependenciaNecesidad'
      responses:
        "201":
          description: '{int} models.DependenciaNecesidad'
        "400":
          description: the request contains incorrect syntax
  /dependencia_necesidad/{id}:
    get:
      tags:
      - dependencia_necesidad
      description: get DependenciaNecesidad by id
      operationId: DependenciaNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DependenciaNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - dependencia_necesidad
      description: update the DependenciaNecesidad
      operationId: DependenciaNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DependenciaNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.DependenciaNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DependenciaNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - dependencia_necesidad
      description: delete the DependenciaNecesidad
      operationId: DependenciaNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /detalle_preliquidacion/:
    get:
      tags:
      - detalle_preliquidacion
      description: get DetallePreliquidacion
      operationId: DetallePreliquidacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetallePreliquidacion'
        "404":
          description: not found resource
    post:
      tags:
      - detalle_preliquidacion
      description: create DetallePreliquidacion
      operationId: DetallePreliquidacionController.Post
      parameters:
      - in: body
        name: body
        description: body for DetallePreliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.DetallePreliquidacion'
      responses:
        "201":
          description: '{int} models.DetallePreliquidacion'
        "400":
          description: the request contains incorrect syntax
  /detalle_preliquidacion/{id}:
    get:
      tags:
      - detalle_preliquidacion
      description: get DetallePreliquidacion by id
      operationId: DetallePreliquidacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetallePreliquidacion'
        "404":
          description: not found resource
    put:
      tags:
      - detalle_preliquidacion
      description: update the DetallePreliquidacion
      operationId: DetallePreliquidacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DetallePreliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.DetallePreliquidacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetallePreliquidacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - detalle_preliquidacion
      description: delete the DetallePreliquidacion
      operationId: DetallePreliquidacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /detalle_servicio_necesidad/:
    get:
      tags:
      - detalle_servicio_necesidad
      description: get DetalleServicioNecesidad
      operationId: DetalleServicioNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetalleServicioNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - detalle_servicio_necesidad
      description: create DetalleServicioNecesidad
      operationId: DetalleServicioNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for DetalleServicioNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.DetalleServicioNecesidad'
      responses:
        "201":
          description: '{int} models.DetalleServicioNecesidad'
        "400":
          description: the request contains incorrect syntax
  /detalle_servicio_necesidad/{id}:
    get:
      tags:
      - detalle_servicio_necesidad
      description: get DetalleServicioNecesidad by id
      operationId: DetalleServicioNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetalleServicioNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - detalle_servicio_necesidad
      description: update the DetalleServicioNecesidad
      operationId: DetalleServicioNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DetalleServicioNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.DetalleServicioNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DetalleServicioNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - detalle_servicio_necesidad
      description: delete the DetalleServicioNecesidad
      operationId: DetalleServicioNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /disponibilidad_apropiacion_solicitud_rp/:
    get:
      tags:
      - disponibilidad_apropiacion_solicitud_rp
      description: get DisponibilidadApropiacionSolicitudRp
      operationId: DisponibilidadApropiacionSolicitudRpController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DisponibilidadApropiacionSolicitudRp'
        "404":
          description: not found resource
    post:
      tags:
      - disponibilidad_apropiacion_solicitud_rp
      description: create DisponibilidadApropiacionSolicitudRp
      operationId: DisponibilidadApropiacionSolicitudRpController.Post
      parameters:
      - in: body
        name: body
        description: body for DisponibilidadApropiacionSolicitudRp content
        required: true
        schema:
          $ref: '#/definitions/models.DisponibilidadApropiacionSolicitudRp'
      responses:
        "201":
          description: '{int} models.DisponibilidadApropiacionSolicitudRp'
        "400":
          description: the request contains incorrect syntax
  /disponibilidad_apropiacion_solicitud_rp/{id}:
    get:
      tags:
      - disponibilidad_apropiacion_solicitud_rp
      description: get DisponibilidadApropiacionSolicitudRp by id
      operationId: DisponibilidadApropiacionSolicitudRpController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DisponibilidadApropiacionSolicitudRp'
        "404":
          description: not found resource
    put:
      tags:
      - disponibilidad_apropiacion_solicitud_rp
      description: update the DisponibilidadApropiacionSolicitudRp
      operationId: DisponibilidadApropiacionSolicitudRpController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DisponibilidadApropiacionSolicitudRp content
        required: true
        schema:
          $ref: '#/definitions/models.DisponibilidadApropiacionSolicitudRp'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DisponibilidadApropiacionSolicitudRp'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - disponibilidad_apropiacion_solicitud_rp
      description: delete the DisponibilidadApropiacionSolicitudRp
      operationId: DisponibilidadApropiacionSolicitudRpController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /disponibilidad_contrato/:
    get:
      tags:
      - disponibilidad_contrato
      description: get DisponibilidadContrato
      operationId: DisponibilidadContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DisponibilidadContrato'
        "404":
          description: not found resource
    post:
      tags:
      - disponibilidad_contrato
      description: create DisponibilidadContrato
      operationId: DisponibilidadContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for DisponibilidadContrato content
        required: true
        schema:
          $ref: '#/definitions/models.DisponibilidadContrato'
      responses:
        "201":
          description: '{int} models.DisponibilidadContrato'
        "400":
          description: the request contains incorrect syntax
  /disponibilidad_contrato/{id}:
    get:
      tags:
      - disponibilidad_contrato
      description: get DisponibilidadContrato by id
      operationId: DisponibilidadContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DisponibilidadContrato'
        "404":
          description: not found resource
    put:
      tags:
      - disponibilidad_contrato
      description: update the DisponibilidadContrato
      operationId: DisponibilidadContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DisponibilidadContrato content
        required: true
        schema:
          $ref: '#/definitions/models.DisponibilidadContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DisponibilidadContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - disponibilidad_contrato
      description: delete the DisponibilidadContrato
      operationId: DisponibilidadContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /documento_soporte_acta/:
    get:
      tags:
      - documento_soporte_acta
      description: get DocumentoSoporteActa
      operationId: DocumentoSoporteActaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DocumentoSoporteActa'
        "404":
          description: not found resource
    post:
      tags:
      - documento_soporte_acta
      description: create DocumentoSoporteActa
      operationId: DocumentoSoporteActaController.Post
      parameters:
      - in: body
        name: body
        description: body for DocumentoSoporteActa content
        required: true
        schema:
          $ref: '#/definitions/models.DocumentoSoporteActa'
      responses:
        "201":
          description: '{int} models.DocumentoSoporteActa'
        "400":
          description: the request contains incorrect syntax
  /documento_soporte_acta/{id}:
    get:
      tags:
      - documento_soporte_acta
      description: get DocumentoSoporteActa by id
      operationId: DocumentoSoporteActaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DocumentoSoporteActa'
        "404":
          description: not found resource
    put:
      tags:
      - documento_soporte_acta
      description: update the DocumentoSoporteActa
      operationId: DocumentoSoporteActaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for DocumentoSoporteActa content
        required: true
        schema:
          $ref: '#/definitions/models.DocumentoSoporteActa'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.DocumentoSoporteActa'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - documento_soporte_acta
      description: delete the DocumentoSoporteActa
      operationId: DocumentoSoporteActaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /entrada/:
    get:
      tags:
      - entrada
      description: get Entrada
      operationId: EntradaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrada'
        "404":
          description: not found resource
    post:
      tags:
      - entrada
      description: create Entrada
      operationId: EntradaController.Post
      parameters:
      - in: body
        name: body
        description: body for Entrada content
        required: true
        schema:
          $ref: '#/definitions/models.Entrada'
      responses:
        "201":
          description: '{int} models.Entrada'
        "400":
          description: the request contains incorrect syntax
  /entrada/{id}:
    get:
      tags:
      - entrada
      description: get Entrada by id
      operationId: EntradaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrada'
        "404":
          description: not found resource
    put:
      tags:
      - entrada
      description: update the Entrada
      operationId: EntradaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Entrada content
        required: true
        schema:
          $ref: '#/definitions/models.Entrada'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Entrada'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - entrada
      description: delete the Entrada
      operationId: EntradaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /escalafon/:
    get:
      tags:
      - escalafon
      description: get Escalafon
      operationId: EscalafonController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Escalafon'
        "404":
          description: not found resource
    post:
      tags:
      - escalafon
      description: create Escalafon
      operationId: EscalafonController.Post
      parameters:
      - in: body
        name: body
        description: body for Escalafon content
        required: true
        schema:
          $ref: '#/definitions/models.Escalafon'
      responses:
        "201":
          description: '{int} models.Escalafon'
        "400":
          description: the request contains incorrect syntax
  /escalafon/{id}:
    get:
      tags:
      - escalafon
      description: get Escalafon by id
      operationId: EscalafonController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Escalafon'
        "404":
          description: not found resource
    put:
      tags:
      - escalafon
      description: update the Escalafon
      operationId: EscalafonController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Escalafon content
        required: true
        schema:
          $ref: '#/definitions/models.Escalafon'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Escalafon'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - escalafon
      description: delete the Escalafon
      operationId: EscalafonController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /escalafon_persona/:
    get:
      tags:
      - escalafon_persona
      description: get EscalafonPersona
      operationId: EscalafonPersonaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EscalafonPersona'
        "404":
          description: not found resource
    post:
      tags:
      - escalafon_persona
      description: create EscalafonPersona
      operationId: EscalafonPersonaController.Post
      parameters:
      - in: body
        name: body
        description: body for EscalafonPersona content
        required: true
        schema:
          $ref: '#/definitions/models.EscalafonPersona'
      responses:
        "201":
          description: '{int} models.EscalafonPersona'
        "400":
          description: the request contains incorrect syntax
  /escalafon_persona/{id}:
    get:
      tags:
      - escalafon_persona
      description: get EscalafonPersona by id
      operationId: EscalafonPersonaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EscalafonPersona'
        "404":
          description: not found resource
    put:
      tags:
      - escalafon_persona
      description: update the EscalafonPersona
      operationId: EscalafonPersonaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EscalafonPersona content
        required: true
        schema:
          $ref: '#/definitions/models.EscalafonPersona'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EscalafonPersona'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - escalafon_persona
      description: delete the EscalafonPersona
      operationId: EscalafonPersonaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /especificacion_tecnica/:
    get:
      tags:
      - especificacion_tecnica
      description: get EspecificacionTecnica
      operationId: EspecificacionTecnicaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EspecificacionTecnica'
        "404":
          description: not found resource
    post:
      tags:
      - especificacion_tecnica
      description: create EspecificacionTecnica
      operationId: EspecificacionTecnicaController.Post
      parameters:
      - in: body
        name: body
        description: body for EspecificacionTecnica content
        required: true
        schema:
          $ref: '#/definitions/models.EspecificacionTecnica'
      responses:
        "201":
          description: '{int} models.EspecificacionTecnica'
        "400":
          description: the request contains incorrect syntax
  /especificacion_tecnica/{id}:
    get:
      tags:
      - especificacion_tecnica
      description: get EspecificacionTecnica by id
      operationId: EspecificacionTecnicaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EspecificacionTecnica'
        "404":
          description: not found resource
    put:
      tags:
      - especificacion_tecnica
      description: update the EspecificacionTecnica
      operationId: EspecificacionTecnicaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EspecificacionTecnica content
        required: true
        schema:
          $ref: '#/definitions/models.EspecificacionTecnica'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EspecificacionTecnica'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - especificacion_tecnica
      description: delete the EspecificacionTecnica
      operationId: EspecificacionTecnicaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_acta_recibido/:
    get:
      tags:
      - estado_acta_recibido
      description: get EstadoActaRecibido
      operationId: EstadoActaRecibidoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoActaRecibido'
        "404":
          description: not found resource
    post:
      tags:
      - estado_acta_recibido
      description: create EstadoActaRecibido
      operationId: EstadoActaRecibidoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoActaRecibido'
      responses:
        "201":
          description: '{int} models.EstadoActaRecibido'
        "400":
          description: the request contains incorrect syntax
  /estado_acta_recibido/{id}:
    get:
      tags:
      - estado_acta_recibido
      description: get EstadoActaRecibido by id
      operationId: EstadoActaRecibidoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoActaRecibido'
        "404":
          description: not found resource
    put:
      tags:
      - estado_acta_recibido
      description: update the EstadoActaRecibido
      operationId: EstadoActaRecibidoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoActaRecibido content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoActaRecibido'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoActaRecibido'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_acta_recibido
      description: delete the EstadoActaRecibido
      operationId: EstadoActaRecibidoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_contrato/:
    get:
      tags:
      - estado_contrato
      description: get EstadoContrato
      operationId: EstadoContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoContrato'
        "404":
          description: not found resource
    post:
      tags:
      - estado_contrato
      description: create EstadoContrato
      operationId: EstadoContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoContrato'
      responses:
        "201":
          description: '{int} models.EstadoContrato'
        "400":
          description: the request contains incorrect syntax
  /estado_contrato/{id}:
    get:
      tags:
      - estado_contrato
      description: get EstadoContrato by id
      operationId: EstadoContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoContrato'
        "404":
          description: not found resource
    put:
      tags:
      - estado_contrato
      description: update the EstadoContrato
      operationId: EstadoContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_contrato
      description: delete the EstadoContrato
      operationId: EstadoContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_entrada/:
    get:
      tags:
      - estado_entrada
      description: get EstadoEntrada
      operationId: EstadoEntradaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoEntrada'
        "404":
          description: not found resource
    post:
      tags:
      - estado_entrada
      description: create EstadoEntrada
      operationId: EstadoEntradaController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoEntrada content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEntrada'
      responses:
        "201":
          description: '{int} models.EstadoEntrada'
        "400":
          description: the request contains incorrect syntax
  /estado_entrada/{id}:
    get:
      tags:
      - estado_entrada
      description: get EstadoEntrada by id
      operationId: EstadoEntradaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoEntrada'
        "404":
          description: not found resource
    put:
      tags:
      - estado_entrada
      description: update the EstadoEntrada
      operationId: EstadoEntradaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoEntrada content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoEntrada'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoEntrada'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_entrada
      description: delete the EstadoEntrada
      operationId: EstadoEntradaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_inventario/:
    get:
      tags:
      - estado_inventario
      description: get EstadoInventario
      operationId: EstadoInventarioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoInventario'
        "404":
          description: not found resource
    post:
      tags:
      - estado_inventario
      description: create EstadoInventario
      operationId: EstadoInventarioController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoInventario content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoInventario'
      responses:
        "201":
          description: '{int} models.EstadoInventario'
        "400":
          description: the request contains incorrect syntax
  /estado_inventario/{id}:
    get:
      tags:
      - estado_inventario
      description: get EstadoInventario by id
      operationId: EstadoInventarioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoInventario'
        "404":
          description: not found resource
    put:
      tags:
      - estado_inventario
      description: update the EstadoInventario
      operationId: EstadoInventarioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoInventario content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoInventario'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoInventario'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_inventario
      description: delete the EstadoInventario
      operationId: EstadoInventarioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_necesidad/:
    get:
      tags:
      - estado_necesidad
      description: get EstadoNecesidad
      operationId: EstadoNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - estado_necesidad
      description: create EstadoNecesidad
      operationId: EstadoNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoNecesidad'
      responses:
        "201":
          description: '{int} models.EstadoNecesidad'
        "400":
          description: the request contains incorrect syntax
  /estado_necesidad/{id}:
    get:
      tags:
      - estado_necesidad
      description: get EstadoNecesidad by id
      operationId: EstadoNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - estado_necesidad
      description: update the EstadoNecesidad
      operationId: EstadoNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_necesidad
      description: delete the EstadoNecesidad
      operationId: EstadoNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_pago_mensual/:
    get:
      tags:
      - estado_pago_mensual
      description: get EstadoPagoMensual
      operationId: EstadoPagoMensualController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoPagoMensual'
        "404":
          description: not found resource
    post:
      tags:
      - estado_pago_mensual
      description: create EstadoPagoMensual
      operationId: EstadoPagoMensualController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoPagoMensual content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoPagoMensual'
      responses:
        "201":
          description: '{int} models.EstadoPagoMensual'
        "400":
          description: the request contains incorrect syntax
  /estado_pago_mensual/{id}:
    get:
      tags:
      - estado_pago_mensual
      description: get EstadoPagoMensual by id
      operationId: EstadoPagoMensualController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoPagoMensual'
        "404":
          description: not found resource
    put:
      tags:
      - estado_pago_mensual
      description: update the EstadoPagoMensual
      operationId: EstadoPagoMensualController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoPagoMensual content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoPagoMensual'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoPagoMensual'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_pago_mensual
      description: delete the EstadoPagoMensual
      operationId: EstadoPagoMensualController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_preliquidacion/:
    get:
      tags:
      - estado_preliquidacion
      description: get EstadoPreliquidacion
      operationId: EstadoPreliquidacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoPreliquidacion'
        "404":
          description: not found resource
    post:
      tags:
      - estado_preliquidacion
      description: create EstadoPreliquidacion
      operationId: EstadoPreliquidacionController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoPreliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoPreliquidacion'
      responses:
        "201":
          description: '{int} models.EstadoPreliquidacion'
        "400":
          description: the request contains incorrect syntax
  /estado_preliquidacion/{id}:
    get:
      tags:
      - estado_preliquidacion
      description: get EstadoPreliquidacion by id
      operationId: EstadoPreliquidacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoPreliquidacion'
        "404":
          description: not found resource
    put:
      tags:
      - estado_preliquidacion
      description: update the EstadoPreliquidacion
      operationId: EstadoPreliquidacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoPreliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoPreliquidacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoPreliquidacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_preliquidacion
      description: delete the EstadoPreliquidacion
      operationId: EstadoPreliquidacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_resolucion/:
    get:
      tags:
      - estado_resolucion
      description: get EstadoResolucion
      operationId: EstadoResolucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoResolucion'
        "404":
          description: not found resource
    post:
      tags:
      - estado_resolucion
      description: create EstadoResolucion
      operationId: EstadoResolucionController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoResolucion'
      responses:
        "201":
          description: '{int} models.EstadoResolucion'
        "400":
          description: the request contains incorrect syntax
  /estado_resolucion/{id}:
    get:
      tags:
      - estado_resolucion
      description: get EstadoResolucion by id
      operationId: EstadoResolucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoResolucion'
        "404":
          description: not found resource
    put:
      tags:
      - estado_resolucion
      description: update the EstadoResolucion
      operationId: EstadoResolucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoResolucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoResolucion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_resolucion
      description: delete the EstadoResolucion
      operationId: EstadoResolucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /estado_rol_pension/:
    get:
      tags:
      - estado_rol_pension
      description: get EstadoRolPension
      operationId: EstadoRolPensionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoRolPension'
        "404":
          description: not found resource
    post:
      tags:
      - estado_rol_pension
      description: create EstadoRolPension
      operationId: EstadoRolPensionController.Post
      parameters:
      - in: body
        name: body
        description: body for EstadoRolPension content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoRolPension'
      responses:
        "201":
          description: '{int} models.EstadoRolPension'
        "400":
          description: the request contains incorrect syntax
  /estado_rol_pension/{id}:
    get:
      tags:
      - estado_rol_pension
      description: get EstadoRolPension by id
      operationId: EstadoRolPensionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoRolPension'
        "404":
          description: not found resource
    put:
      tags:
      - estado_rol_pension
      description: update the EstadoRolPension
      operationId: EstadoRolPensionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for EstadoRolPension content
        required: true
        schema:
          $ref: '#/definitions/models.EstadoRolPension'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.EstadoRolPension'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - estado_rol_pension
      description: delete the EstadoRolPension
      operationId: EstadoRolPensionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /fuente_financiacion_rubro_necesidad/:
    get:
      tags:
      - fuente_financiacion_rubro_necesidad
      description: get FuenteFinanciacionRubroNecesidad
      operationId: FuenteFinanciacionRubroNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - fuente_financiacion_rubro_necesidad
      description: create FuenteFinanciacionRubroNecesidad
      operationId: FuenteFinanciacionRubroNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for FuenteFinanciacionRubroNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
      responses:
        "201":
          description: '{int} models.FuenteFinanciacionRubroNecesidad'
        "400":
          description: the request contains incorrect syntax
  /fuente_financiacion_rubro_necesidad/{id}:
    get:
      tags:
      - fuente_financiacion_rubro_necesidad
      description: get FuenteFinanciacionRubroNecesidad by id
      operationId: FuenteFinanciacionRubroNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - fuente_financiacion_rubro_necesidad
      description: update the FuenteFinanciacionRubroNecesidad
      operationId: FuenteFinanciacionRubroNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for FuenteFinanciacionRubroNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - fuente_financiacion_rubro_necesidad
      description: delete the FuenteFinanciacionRubroNecesidad
      operationId: FuenteFinanciacionRubroNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /grupo/:
    get:
      tags:
      - grupo
      description: get Grupo
      operationId: GrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Grupo'
        "404":
          description: not found resource
    post:
      tags:
      - grupo
      description: create Grupo
      operationId: GrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for Grupo content
        required: true
        schema:
          $ref: '#/definitions/models.Grupo'
      responses:
        "201":
          description: '{int} models.Grupo'
        "400":
          description: the request contains incorrect syntax
  /grupo/{id}:
    get:
      tags:
      - grupo
      description: get Grupo by id
      operationId: GrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Grupo'
        "404":
          description: not found resource
    put:
      tags:
      - grupo
      description: update the Grupo
      operationId: GrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Grupo content
        required: true
        schema:
          $ref: '#/definitions/models.Grupo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Grupo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - grupo
      description: delete the Grupo
      operationId: GrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /inventario/:
    get:
      tags:
      - inventario
      description: get Inventario
      operationId: InventarioController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Inventario'
        "404":
          description: not found resource
    post:
      tags:
      - inventario
      description: create Inventario
      operationId: InventarioController.Post
      parameters:
      - in: body
        name: body
        description: body for Inventario content
        required: true
        schema:
          $ref: '#/definitions/models.Inventario'
      responses:
        "201":
          description: '{int} models.Inventario'
        "400":
          description: the request contains incorrect syntax
  /inventario/{id}:
    get:
      tags:
      - inventario
      description: get Inventario by id
      operationId: InventarioController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Inventario'
        "404":
          description: not found resource
    put:
      tags:
      - inventario
      description: update the Inventario
      operationId: InventarioController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Inventario content
        required: true
        schema:
          $ref: '#/definitions/models.Inventario'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Inventario'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - inventario
      description: delete the Inventario
      operationId: InventarioController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /inventario_movimiento/:
    get:
      tags:
      - inventario_movimiento
      description: get InventarioMovimiento
      operationId: InventarioMovimientoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.InventarioMovimiento'
        "404":
          description: not found resource
    post:
      tags:
      - inventario_movimiento
      description: create InventarioMovimiento
      operationId: InventarioMovimientoController.Post
      parameters:
      - in: body
        name: body
        description: body for InventarioMovimiento content
        required: true
        schema:
          $ref: '#/definitions/models.InventarioMovimiento'
      responses:
        "201":
          description: '{int} models.InventarioMovimiento'
        "400":
          description: the request contains incorrect syntax
  /inventario_movimiento/{id}:
    get:
      tags:
      - inventario_movimiento
      description: get InventarioMovimiento by id
      operationId: InventarioMovimientoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.InventarioMovimiento'
        "404":
          description: not found resource
    put:
      tags:
      - inventario_movimiento
      description: update the InventarioMovimiento
      operationId: InventarioMovimientoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for InventarioMovimiento content
        required: true
        schema:
          $ref: '#/definitions/models.InventarioMovimiento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.InventarioMovimiento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - inventario_movimiento
      description: delete the InventarioMovimiento
      operationId: InventarioMovimientoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /ipc/:
    get:
      tags:
      - ipc
      description: get Ipc
      operationId: IpcController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ipc'
        "404":
          description: not found resource
    post:
      tags:
      - ipc
      description: create Ipc
      operationId: IpcController.Post
      parameters:
      - in: body
        name: body
        description: body for Ipc content
        required: true
        schema:
          $ref: '#/definitions/models.Ipc'
      responses:
        "201":
          description: '{int} models.Ipc'
        "400":
          description: the request contains incorrect syntax
  /ipc/{id}:
    get:
      tags:
      - ipc
      description: get Ipc by id
      operationId: IpcController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ipc'
        "404":
          description: not found resource
    put:
      tags:
      - ipc
      description: update the Ipc
      operationId: IpcController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Ipc content
        required: true
        schema:
          $ref: '#/definitions/models.Ipc'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Ipc'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - ipc
      description: delete the Ipc
      operationId: IpcController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /item_informe/:
    get:
      tags:
      - item_informe
      description: get ItemInforme
      operationId: ItemInformeController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemInforme'
        "404":
          description: not found resource
    post:
      tags:
      - item_informe
      description: create ItemInforme
      operationId: ItemInformeController.Post
      parameters:
      - in: body
        name: body
        description: body for ItemInforme content
        required: true
        schema:
          $ref: '#/definitions/models.ItemInforme'
      responses:
        "201":
          description: '{int} models.ItemInforme'
        "400":
          description: the request contains incorrect syntax
  /item_informe/{id}:
    get:
      tags:
      - item_informe
      description: get ItemInforme by id
      operationId: ItemInformeController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemInforme'
        "404":
          description: not found resource
    put:
      tags:
      - item_informe
      description: update the ItemInforme
      operationId: ItemInformeController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ItemInforme content
        required: true
        schema:
          $ref: '#/definitions/models.ItemInforme'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemInforme'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - item_informe
      description: delete the ItemInforme
      operationId: ItemInformeController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /item_informe_tipo_contrato/:
    get:
      tags:
      - item_informe_tipo_contrato
      description: get ItemInformeTipoContrato
      operationId: ItemInformeTipoContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemInformeTipoContrato'
        "404":
          description: not found resource
    post:
      tags:
      - item_informe_tipo_contrato
      description: create ItemInformeTipoContrato
      operationId: ItemInformeTipoContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for ItemInformeTipoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.ItemInformeTipoContrato'
      responses:
        "201":
          description: '{int} models.ItemInformeTipoContrato'
        "400":
          description: the request contains incorrect syntax
  /item_informe_tipo_contrato/{id}:
    get:
      tags:
      - item_informe_tipo_contrato
      description: get ItemInformeTipoContrato by id
      operationId: ItemInformeTipoContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemInformeTipoContrato'
        "404":
          description: not found resource
    put:
      tags:
      - item_informe_tipo_contrato
      description: update the ItemInformeTipoContrato
      operationId: ItemInformeTipoContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ItemInformeTipoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.ItemInformeTipoContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ItemInformeTipoContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - item_informe_tipo_contrato
      description: delete the ItemInformeTipoContrato
      operationId: ItemInformeTipoContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /lugar_ejecucion/:
    get:
      tags:
      - lugar_ejecucion
      description: get LugarEjecucion
      operationId: LugarEjecucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LugarEjecucion'
        "404":
          description: not found resource
    post:
      tags:
      - lugar_ejecucion
      description: create LugarEjecucion
      operationId: LugarEjecucionController.Post
      parameters:
      - in: body
        name: body
        description: body for LugarEjecucion content
        required: true
        schema:
          $ref: '#/definitions/models.LugarEjecucion'
      responses:
        "201":
          description: '{int} models.LugarEjecucion'
        "400":
          description: the request contains incorrect syntax
  /lugar_ejecucion/{id}:
    get:
      tags:
      - lugar_ejecucion
      description: get LugarEjecucion by id
      operationId: LugarEjecucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LugarEjecucion'
        "404":
          description: not found resource
    put:
      tags:
      - lugar_ejecucion
      description: update the LugarEjecucion
      operationId: LugarEjecucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for LugarEjecucion content
        required: true
        schema:
          $ref: '#/definitions/models.LugarEjecucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.LugarEjecucion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - lugar_ejecucion
      description: delete the LugarEjecucion
      operationId: LugarEjecucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /marco_legal/:
    get:
      tags:
      - marco_legal
      description: get MarcoLegal
      operationId: MarcoLegalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MarcoLegal'
        "404":
          description: not found resource
    post:
      tags:
      - marco_legal
      description: create MarcoLegal
      operationId: MarcoLegalController.Post
      parameters:
      - in: body
        name: body
        description: body for MarcoLegal content
        required: true
        schema:
          $ref: '#/definitions/models.MarcoLegal'
      responses:
        "201":
          description: '{int} models.MarcoLegal'
        "400":
          description: the request contains incorrect syntax
  /marco_legal/{id}:
    get:
      tags:
      - marco_legal
      description: get MarcoLegal by id
      operationId: MarcoLegalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MarcoLegal'
        "404":
          description: not found resource
    put:
      tags:
      - marco_legal
      description: update the MarcoLegal
      operationId: MarcoLegalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MarcoLegal content
        required: true
        schema:
          $ref: '#/definitions/models.MarcoLegal'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MarcoLegal'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - marco_legal
      description: delete the MarcoLegal
      operationId: MarcoLegalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /marco_legal_necesidad/:
    get:
      tags:
      - marco_legal_necesidad
      description: get MarcoLegalNecesidad
      operationId: MarcoLegalNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MarcoLegalNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - marco_legal_necesidad
      description: create MarcoLegalNecesidad
      operationId: MarcoLegalNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for MarcoLegalNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.MarcoLegalNecesidad'
      responses:
        "201":
          description: '{int} models.MarcoLegalNecesidad'
        "400":
          description: the request contains incorrect syntax
  /marco_legal_necesidad/{id}:
    get:
      tags:
      - marco_legal_necesidad
      description: get MarcoLegalNecesidad by id
      operationId: MarcoLegalNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MarcoLegalNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - marco_legal_necesidad
      description: update the MarcoLegalNecesidad
      operationId: MarcoLegalNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for MarcoLegalNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.MarcoLegalNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.MarcoLegalNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - marco_legal_necesidad
      description: delete the MarcoLegalNecesidad
      operationId: MarcoLegalNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /modalidad_seleccion/:
    get:
      tags:
      - modalidad_seleccion
      description: get ModalidadSeleccion
      operationId: ModalidadSeleccionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModalidadSeleccion'
        "404":
          description: not found resource
    post:
      tags:
      - modalidad_seleccion
      description: create ModalidadSeleccion
      operationId: ModalidadSeleccionController.Post
      parameters:
      - in: body
        name: body
        description: body for ModalidadSeleccion content
        required: true
        schema:
          $ref: '#/definitions/models.ModalidadSeleccion'
      responses:
        "201":
          description: '{int} models.ModalidadSeleccion'
        "400":
          description: the request contains incorrect syntax
  /modalidad_seleccion/{id}:
    get:
      tags:
      - modalidad_seleccion
      description: get ModalidadSeleccion by id
      operationId: ModalidadSeleccionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModalidadSeleccion'
        "404":
          description: not found resource
    put:
      tags:
      - modalidad_seleccion
      description: update the ModalidadSeleccion
      operationId: ModalidadSeleccionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModalidadSeleccion content
        required: true
        schema:
          $ref: '#/definitions/models.ModalidadSeleccion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModalidadSeleccion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - modalidad_seleccion
      description: delete the ModalidadSeleccion
      operationId: ModalidadSeleccionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /modificacion_resolucion/:
    get:
      tags:
      - modificacion_resolucion
      description: get ModificacionResolucion
      operationId: ModificacionResolucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModificacionResolucion'
        "404":
          description: not found resource
    post:
      tags:
      - modificacion_resolucion
      description: create ModificacionResolucion
      operationId: ModificacionResolucionController.Post
      parameters:
      - in: body
        name: body
        description: body for ModificacionResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.ModificacionResolucion'
      responses:
        "201":
          description: '{int} models.ModificacionResolucion'
        "400":
          description: the request contains incorrect syntax
  /modificacion_resolucion/{id}:
    get:
      tags:
      - modificacion_resolucion
      description: get ModificacionResolucion by id
      operationId: ModificacionResolucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModificacionResolucion'
        "404":
          description: not found resource
    put:
      tags:
      - modificacion_resolucion
      description: update the ModificacionResolucion
      operationId: ModificacionResolucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModificacionResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.ModificacionResolucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModificacionResolucion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - modificacion_resolucion
      description: delete the ModificacionResolucion
      operationId: ModificacionResolucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /modificacion_vinculacion/:
    get:
      tags:
      - modificacion_vinculacion
      description: get ModificacionVinculacion
      operationId: ModificacionVinculacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModificacionVinculacion'
        "404":
          description: not found resource
    post:
      tags:
      - modificacion_vinculacion
      description: create ModificacionVinculacion
      operationId: ModificacionVinculacionController.Post
      parameters:
      - in: body
        name: body
        description: body for ModificacionVinculacion content
        required: true
        schema:
          $ref: '#/definitions/models.ModificacionVinculacion'
      responses:
        "201":
          description: '{int} models.ModificacionVinculacion'
        "400":
          description: the request contains incorrect syntax
  /modificacion_vinculacion/{id}:
    get:
      tags:
      - modificacion_vinculacion
      description: get ModificacionVinculacion by id
      operationId: ModificacionVinculacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModificacionVinculacion'
        "404":
          description: not found resource
    put:
      tags:
      - modificacion_vinculacion
      description: update the ModificacionVinculacion
      operationId: ModificacionVinculacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ModificacionVinculacion content
        required: true
        schema:
          $ref: '#/definitions/models.ModificacionVinculacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ModificacionVinculacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - modificacion_vinculacion
      description: delete the ModificacionVinculacion
      operationId: ModificacionVinculacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /movimiento/:
    get:
      tags:
      - movimiento
      description: get Movimiento
      operationId: MovimientoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Movimiento'
        "404":
          description: not found resource
    post:
      tags:
      - movimiento
      description: create Movimiento
      operationId: MovimientoController.Post
      parameters:
      - in: body
        name: body
        description: body for Movimiento content
        required: true
        schema:
          $ref: '#/definitions/models.Movimiento'
      responses:
        "201":
          description: '{int} models.Movimiento'
        "400":
          description: the request contains incorrect syntax
  /movimiento/{id}:
    get:
      tags:
      - movimiento
      description: get Movimiento by id
      operationId: MovimientoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Movimiento'
        "404":
          description: not found resource
    put:
      tags:
      - movimiento
      description: update the Movimiento
      operationId: MovimientoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Movimiento content
        required: true
        schema:
          $ref: '#/definitions/models.Movimiento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Movimiento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - movimiento
      description: delete the Movimiento
      operationId: MovimientoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /naturaleza_concepto_nomina/:
    get:
      tags:
      - naturaleza_concepto_nomina
      description: get NaturalezaConceptoNomina
      operationId: NaturalezaConceptoNominaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NaturalezaConceptoNomina'
        "404":
          description: not found resource
    post:
      tags:
      - naturaleza_concepto_nomina
      description: create NaturalezaConceptoNomina
      operationId: NaturalezaConceptoNominaController.Post
      parameters:
      - in: body
        name: body
        description: body for NaturalezaConceptoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.NaturalezaConceptoNomina'
      responses:
        "201":
          description: '{int} models.NaturalezaConceptoNomina'
        "400":
          description: the request contains incorrect syntax
  /naturaleza_concepto_nomina/{id}:
    get:
      tags:
      - naturaleza_concepto_nomina
      description: get NaturalezaConceptoNomina by id
      operationId: NaturalezaConceptoNominaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NaturalezaConceptoNomina'
        "404":
          description: not found resource
    put:
      tags:
      - naturaleza_concepto_nomina
      description: update the NaturalezaConceptoNomina
      operationId: NaturalezaConceptoNominaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NaturalezaConceptoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.NaturalezaConceptoNomina'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NaturalezaConceptoNomina'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - naturaleza_concepto_nomina
      description: delete the NaturalezaConceptoNomina
      operationId: NaturalezaConceptoNominaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /necesidad/:
    get:
      tags:
      - necesidad
      description: get Necesidad
      operationId: NecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Necesidad'
        "404":
          description: not found resource
    post:
      tags:
      - necesidad
      description: create Necesidad
      operationId: NecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for Necesidad content
        required: true
        schema:
          $ref: '#/definitions/models.Necesidad'
      responses:
        "201":
          description: '{int} models.Necesidad'
        "400":
          description: the request contains incorrect syntax
  /necesidad/{id}:
    get:
      tags:
      - necesidad
      description: get Necesidad by id
      operationId: NecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Necesidad'
        "404":
          description: not found resource
    put:
      tags:
      - necesidad
      description: update the Necesidad it calculates the consecutive number and update
        the need
      operationId: NecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Necesidad content
        required: true
        schema:
          $ref: '#/definitions/models.Necesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Necesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - necesidad
      description: delete the Necesidad
      operationId: NecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /necesidad_proceso_externo/:
    get:
      tags:
      - necesidad_proceso_externo
      description: get NecesidadProcesoExterno
      operationId: NecesidadProcesoExternoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NecesidadProcesoExterno'
        "404":
          description: not found resource
    post:
      tags:
      - necesidad_proceso_externo
      description: create NecesidadProcesoExterno
      operationId: NecesidadProcesoExternoController.Post
      parameters:
      - in: body
        name: body
        description: body for NecesidadProcesoExterno content
        required: true
        schema:
          $ref: '#/definitions/models.NecesidadProcesoExterno'
      responses:
        "201":
          description: '{int} models.NecesidadProcesoExterno'
        "400":
          description: the request contains incorrect syntax
  /necesidad_proceso_externo/{id}:
    get:
      tags:
      - necesidad_proceso_externo
      description: get NecesidadProcesoExterno by id
      operationId: NecesidadProcesoExternoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NecesidadProcesoExterno'
        "404":
          description: not found resource
    put:
      tags:
      - necesidad_proceso_externo
      description: update the NecesidadProcesoExterno
      operationId: NecesidadProcesoExternoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NecesidadProcesoExterno content
        required: true
        schema:
          $ref: '#/definitions/models.NecesidadProcesoExterno'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NecesidadProcesoExterno'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - necesidad_proceso_externo
      description: delete the NecesidadProcesoExterno
      operationId: NecesidadProcesoExternoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /necesidad_rechazada/:
    get:
      tags:
      - necesidad_rechazada
      description: get NecesidadRechazada
      operationId: NecesidadRechazadaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NecesidadRechazada'
        "404":
          description: not found resource
    post:
      tags:
      - necesidad_rechazada
      description: create NecesidadRechazada
      operationId: NecesidadRechazadaController.Post
      parameters:
      - in: body
        name: body
        description: body for NecesidadRechazada content
        required: true
        schema:
          $ref: '#/definitions/models.NecesidadRechazada'
      responses:
        "201":
          description: '{int} models.NecesidadRechazada'
        "400":
          description: the request contains incorrect syntax
  /necesidad_rechazada/{id}:
    get:
      tags:
      - necesidad_rechazada
      description: get NecesidadRechazada by id
      operationId: NecesidadRechazadaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NecesidadRechazada'
        "404":
          description: not found resource
    put:
      tags:
      - necesidad_rechazada
      description: update the NecesidadRechazada
      operationId: NecesidadRechazadaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for NecesidadRechazada content
        required: true
        schema:
          $ref: '#/definitions/models.NecesidadRechazada'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.NecesidadRechazada'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - necesidad_rechazada
      description: delete the NecesidadRechazada
      operationId: NecesidadRechazadaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /nomina/:
    get:
      tags:
      - nomina
      description: get Nomina
      operationId: NominaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Nomina'
        "404":
          description: not found resource
    post:
      tags:
      - nomina
      description: create Nomina
      operationId: NominaController.Post
      parameters:
      - in: body
        name: body
        description: body for Nomina content
        required: true
        schema:
          $ref: '#/definitions/models.Nomina'
      responses:
        "201":
          description: '{int} models.Nomina'
        "400":
          description: the request contains incorrect syntax
  /nomina/{id}:
    get:
      tags:
      - nomina
      description: get Nomina by id
      operationId: NominaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Nomina'
        "404":
          description: not found resource
    put:
      tags:
      - nomina
      description: update the Nomina
      operationId: NominaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Nomina content
        required: true
        schema:
          $ref: '#/definitions/models.Nomina'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Nomina'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - nomina
      description: delete the Nomina
      operationId: NominaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /opcion_atributo_recurso/:
    get:
      tags:
      - opcion_atributo_recurso
      description: get OpcionAtributoRecurso
      operationId: OpcionAtributoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OpcionAtributoRecurso'
        "404":
          description: not found resource
    post:
      tags:
      - opcion_atributo_recurso
      description: create OpcionAtributoRecurso
      operationId: OpcionAtributoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for OpcionAtributoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.OpcionAtributoRecurso'
      responses:
        "201":
          description: '{int} models.OpcionAtributoRecurso'
        "400":
          description: the request contains incorrect syntax
  /opcion_atributo_recurso/{id}:
    get:
      tags:
      - opcion_atributo_recurso
      description: get OpcionAtributoRecurso by id
      operationId: OpcionAtributoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OpcionAtributoRecurso'
        "404":
          description: not found resource
    put:
      tags:
      - opcion_atributo_recurso
      description: update the OpcionAtributoRecurso
      operationId: OpcionAtributoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for OpcionAtributoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.OpcionAtributoRecurso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.OpcionAtributoRecurso'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - opcion_atributo_recurso
      description: delete the OpcionAtributoRecurso
      operationId: OpcionAtributoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /pago/:
    get:
      tags:
      - pago
      description: get Pago
      operationId: PagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Pago'
        "404":
          description: not found resource
    post:
      tags:
      - pago
      description: create Pago
      operationId: PagoController.Post
      parameters:
      - in: body
        name: body
        description: body for Pago content
        required: true
        schema:
          $ref: '#/definitions/models.Pago'
      responses:
        "201":
          description: '{int} models.Pago'
        "400":
          description: the request contains incorrect syntax
  /pago/{id}:
    get:
      tags:
      - pago
      description: get Pago by id
      operationId: PagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Pago'
        "404":
          description: not found resource
    put:
      tags:
      - pago
      description: update the Pago
      operationId: PagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Pago content
        required: true
        schema:
          $ref: '#/definitions/models.Pago'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Pago'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - pago
      description: delete the Pago
      operationId: PagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /pago_mensual/:
    get:
      tags:
      - pago_mensual
      description: get PagoMensual
      operationId: PagoMensualController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PagoMensual'
        "404":
          description: not found resource
    post:
      tags:
      - pago_mensual
      description: create PagoMensual
      operationId: PagoMensualController.Post
      parameters:
      - in: body
        name: body
        description: body for PagoMensual content
        required: true
        schema:
          $ref: '#/definitions/models.PagoMensual'
      responses:
        "201":
          description: '{int} models.PagoMensual'
        "400":
          description: the request contains incorrect syntax
  /pago_mensual/{id}:
    get:
      tags:
      - pago_mensual
      description: get PagoMensual by id
      operationId: PagoMensualController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PagoMensual'
        "404":
          description: not found resource
    put:
      tags:
      - pago_mensual
      description: update the PagoMensual
      operationId: PagoMensualController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PagoMensual content
        required: true
        schema:
          $ref: '#/definitions/models.PagoMensual'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PagoMensual'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - pago_mensual
      description: delete the PagoMensual
      operationId: PagoMensualController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /parametro_contraloria/:
    get:
      tags:
      - parametro_contraloria
      description: get ParametroContraloria
      operationId: ParametroContraloriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroContraloria'
        "404":
          description: not found resource
    post:
      tags:
      - parametro_contraloria
      description: create ParametroContraloria
      operationId: ParametroContraloriaController.Post
      parameters:
      - in: body
        name: body
        description: body for ParametroContraloria content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroContraloria'
      responses:
        "201":
          description: '{int} models.ParametroContraloria'
        "400":
          description: the request contains incorrect syntax
  /parametro_contraloria/{id}:
    get:
      tags:
      - parametro_contraloria
      description: get ParametroContraloria by id
      operationId: ParametroContraloriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroContraloria'
        "404":
          description: not found resource
    put:
      tags:
      - parametro_contraloria
      description: update the ParametroContraloria
      operationId: ParametroContraloriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ParametroContraloria content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroContraloria'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroContraloria'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - parametro_contraloria
      description: delete the ParametroContraloria
      operationId: ParametroContraloriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /parametro_contraloria_contrato/:
    get:
      tags:
      - parametro_contraloria_contrato
      description: get ParametroContraloriaContrato
      operationId: ParametroContraloriaContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroContraloriaContrato'
        "404":
          description: not found resource
    post:
      tags:
      - parametro_contraloria_contrato
      description: create ParametroContraloriaContrato
      operationId: ParametroContraloriaContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for ParametroContraloriaContrato content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroContraloriaContrato'
      responses:
        "201":
          description: '{int} models.ParametroContraloriaContrato'
        "400":
          description: the request contains incorrect syntax
  /parametro_contraloria_contrato/{id}:
    get:
      tags:
      - parametro_contraloria_contrato
      description: get ParametroContraloriaContrato by id
      operationId: ParametroContraloriaContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroContraloriaContrato'
        "404":
          description: not found resource
    put:
      tags:
      - parametro_contraloria_contrato
      description: update the ParametroContraloriaContrato
      operationId: ParametroContraloriaContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ParametroContraloriaContrato content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroContraloriaContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroContraloriaContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - parametro_contraloria_contrato
      description: delete the ParametroContraloriaContrato
      operationId: ParametroContraloriaContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /parametro_estandar/:
    get:
      tags:
      - parametro_estandar
      description: get ParametroEstandar
      operationId: ParametroEstandarController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroEstandar'
        "404":
          description: not found resource
    post:
      tags:
      - parametro_estandar
      description: create ParametroEstandar
      operationId: ParametroEstandarController.Post
      parameters:
      - in: body
        name: body
        description: body for ParametroEstandar content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroEstandar'
      responses:
        "201":
          description: '{int} models.ParametroEstandar'
        "400":
          description: the request contains incorrect syntax
  /parametro_estandar/{id}:
    get:
      tags:
      - parametro_estandar
      description: get ParametroEstandar by id
      operationId: ParametroEstandarController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroEstandar'
        "404":
          description: not found resource
    put:
      tags:
      - parametro_estandar
      description: update the ParametroEstandar
      operationId: ParametroEstandarController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ParametroEstandar content
        required: true
        schema:
          $ref: '#/definitions/models.ParametroEstandar'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ParametroEstandar'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - parametro_estandar
      description: delete the ParametroEstandar
      operationId: ParametroEstandarController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /parametros/:
    get:
      tags:
      - parametros
      description: get Parametros
      operationId: ParametrosController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametros'
        "404":
          description: not found resource
    post:
      tags:
      - parametros
      description: create Parametros
      operationId: ParametrosController.Post
      parameters:
      - in: body
        name: body
        description: body for Parametros content
        required: true
        schema:
          $ref: '#/definitions/models.Parametros'
      responses:
        "201":
          description: '{int} models.Parametros'
        "400":
          description: the request contains incorrect syntax
  /parametros/{id}:
    get:
      tags:
      - parametros
      description: get Parametros by id
      operationId: ParametrosController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametros'
        "404":
          description: not found resource
    put:
      tags:
      - parametros
      description: update the Parametros
      operationId: ParametrosController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Parametros content
        required: true
        schema:
          $ref: '#/definitions/models.Parametros'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Parametros'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - parametros
      description: delete the Parametros
      operationId: ParametrosController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /pension/:
    get:
      tags:
      - pension
      description: get Pension
      operationId: PensionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Pension'
        "404":
          description: not found resource
    post:
      tags:
      - pension
      description: create Pension
      operationId: PensionController.Post
      parameters:
      - in: body
        name: body
        description: body for Pension content
        required: true
        schema:
          $ref: '#/definitions/models.Pension'
      responses:
        "201":
          description: '{int} models.Pension'
        "400":
          description: the request contains incorrect syntax
  /pension/{id}:
    get:
      tags:
      - pension
      description: get Pension by id
      operationId: PensionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Pension'
        "404":
          description: not found resource
    put:
      tags:
      - pension
      description: update the Pension
      operationId: PensionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Pension content
        required: true
        schema:
          $ref: '#/definitions/models.Pension'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Pension'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - pension
      description: delete the Pension
      operationId: PensionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /periodo_pago/:
    get:
      tags:
      - periodo_pago
      description: get PeriodoPago
      operationId: PeriodoPagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PeriodoPago'
        "404":
          description: not found resource
    post:
      tags:
      - periodo_pago
      description: create PeriodoPago
      operationId: PeriodoPagoController.Post
      parameters:
      - in: body
        name: body
        description: body for PeriodoPago content
        required: true
        schema:
          $ref: '#/definitions/models.PeriodoPago'
      responses:
        "201":
          description: '{int} models.PeriodoPago'
        "400":
          description: the request contains incorrect syntax
  /periodo_pago/{id}:
    get:
      tags:
      - periodo_pago
      description: get PeriodoPago by id
      operationId: PeriodoPagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PeriodoPago'
        "404":
          description: not found resource
    put:
      tags:
      - periodo_pago
      description: update the PeriodoPago
      operationId: PeriodoPagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PeriodoPago content
        required: true
        schema:
          $ref: '#/definitions/models.PeriodoPago'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PeriodoPago'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - periodo_pago
      description: delete the PeriodoPago
      operationId: PeriodoPagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /persona_escalafon/:
    get:
      tags:
      - persona_escalafon
      description: get PersonaEscalafon
      operationId: PersonaEscalafonController.Get All
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PersonaEscalafon'
        "404":
          description: not found resource
  /poliza/:
    get:
      tags:
      - poliza
      description: get Poliza
      operationId: PolizaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Poliza'
        "404":
          description: not found resource
    post:
      tags:
      - poliza
      description: create Poliza
      operationId: PolizaController.Post
      parameters:
      - in: body
        name: body
        description: body for Poliza content
        required: true
        schema:
          $ref: '#/definitions/models.Poliza'
      responses:
        "201":
          description: '{int} models.Poliza'
        "400":
          description: the request contains incorrect syntax
  /poliza/{id}:
    get:
      tags:
      - poliza
      description: get Poliza by id
      operationId: PolizaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Poliza'
        "404":
          description: not found resource
    put:
      tags:
      - poliza
      description: update the Poliza
      operationId: PolizaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Poliza content
        required: true
        schema:
          $ref: '#/definitions/models.Poliza'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Poliza'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - poliza
      description: delete the Poliza
      operationId: PolizaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /poliza_contrato/:
    get:
      tags:
      - poliza_contrato
      description: get PolizaContrato
      operationId: PolizaContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PolizaContrato'
        "404":
          description: not found resource
    post:
      tags:
      - poliza_contrato
      description: create PolizaContrato
      operationId: PolizaContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for PolizaContrato content
        required: true
        schema:
          $ref: '#/definitions/models.PolizaContrato'
      responses:
        "201":
          description: '{int} models.PolizaContrato'
        "400":
          description: the request contains incorrect syntax
  /poliza_contrato/{id}:
    get:
      tags:
      - poliza_contrato
      description: get PolizaContrato by id
      operationId: PolizaContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PolizaContrato'
        "404":
          description: not found resource
    put:
      tags:
      - poliza_contrato
      description: update the PolizaContrato
      operationId: PolizaContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for PolizaContrato content
        required: true
        schema:
          $ref: '#/definitions/models.PolizaContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.PolizaContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - poliza_contrato
      description: delete the PolizaContrato
      operationId: PolizaContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /precontratado/{idResolucion}:
    get:
      tags:
      - precontratado
      description: get Precontratado
      operationId: PrecontratadoController.Get All
      parameters:
      - in: path
        name: idResolucion
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Precontratado'
        "404":
          description: not found resource
  /precontratado/{idResolucion}/{idPersona}:
    get:
      tags:
      - precontratado
      description: get Precontratado by id
      operationId: PrecontratadoController.Get One
      parameters:
      - in: path
        name: idResolucion
        description: The key for staticblock
        required: true
        type: string
      - in: path
        name: idPersona
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Precontratado'
        "404":
          description: not found resource
  /precontratado/Contratado/{idResolucion}:
    get:
      tags:
      - precontratado
      description: get Precontratado
      operationId: PrecontratadoController.Get All
      parameters:
      - in: path
        name: idResolucion
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Precontratado'
        "404":
          description: not found resource
  /preliquidacion/:
    get:
      tags:
      - preliquidacion
      description: get Preliquidacion
      operationId: PreliquidacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Preliquidacion'
        "404":
          description: not found resource
    post:
      tags:
      - preliquidacion
      description: create Preliquidacion
      operationId: PreliquidacionController.Post
      parameters:
      - in: body
        name: body
        description: body for Preliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.Preliquidacion'
      responses:
        "201":
          description: '{int} models.Preliquidacion'
        "400":
          description: the request contains incorrect syntax
  /preliquidacion/{id}:
    get:
      tags:
      - preliquidacion
      description: get Preliquidacion by id
      operationId: PreliquidacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Preliquidacion'
        "404":
          description: not found resource
    put:
      tags:
      - preliquidacion
      description: update the Preliquidacion
      operationId: PreliquidacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Preliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.Preliquidacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Preliquidacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - preliquidacion
      description: delete the Preliquidacion
      operationId: PreliquidacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /producto_rubro_necesidad/:
    get:
      tags:
      - producto_rubro_necesidad
      description: get ProductoRubroNecesidad
      operationId: ProductoRubroNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductoRubroNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - producto_rubro_necesidad
      description: create ProductoRubroNecesidad
      operationId: ProductoRubroNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for ProductoRubroNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.ProductoRubroNecesidad'
      responses:
        "201":
          description: '{int} models.ProductoRubroNecesidad'
        "400":
          description: the request contains incorrect syntax
  /producto_rubro_necesidad/{id}:
    get:
      tags:
      - producto_rubro_necesidad
      description: get ProductoRubroNecesidad by id
      operationId: ProductoRubroNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductoRubroNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - producto_rubro_necesidad
      description: update the ProductoRubroNecesidad
      operationId: ProductoRubroNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ProductoRubroNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.ProductoRubroNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ProductoRubroNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - producto_rubro_necesidad
      description: delete the ProductoRubroNecesidad
      operationId: ProductoRubroNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /rango_edad_upc/:
    get:
      tags:
      - rango_edad_upc
      description: get RangoEdadUpc
      operationId: RangoEdadUpcController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangoEdadUpc'
        "404":
          description: not found resource
    post:
      tags:
      - rango_edad_upc
      description: create RangoEdadUpc
      operationId: RangoEdadUpcController.Post
      parameters:
      - in: body
        name: body
        description: body for RangoEdadUpc content
        required: true
        schema:
          $ref: '#/definitions/models.RangoEdadUpc'
      responses:
        "201":
          description: '{int} models.RangoEdadUpc'
        "400":
          description: the request contains incorrect syntax
  /rango_edad_upc/{id}:
    get:
      tags:
      - rango_edad_upc
      description: get RangoEdadUpc by id
      operationId: RangoEdadUpcController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangoEdadUpc'
        "404":
          description: not found resource
    put:
      tags:
      - rango_edad_upc
      description: update the RangoEdadUpc
      operationId: RangoEdadUpcController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RangoEdadUpc content
        required: true
        schema:
          $ref: '#/definitions/models.RangoEdadUpc'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RangoEdadUpc'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - rango_edad_upc
      description: delete the RangoEdadUpc
      operationId: RangoEdadUpcController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /recurso/:
    get:
      tags:
      - recurso
      description: get Recurso
      operationId: RecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Recurso'
        "404":
          description: not found resource
    post:
      tags:
      - recurso
      description: create Recurso
      operationId: RecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for Recurso content
        required: true
        schema:
          $ref: '#/definitions/models.Recurso'
      responses:
        "201":
          description: '{int} models.Recurso'
        "400":
          description: the request contains incorrect syntax
  /recurso/{id}:
    get:
      tags:
      - recurso
      description: get Recurso by id
      operationId: RecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Recurso'
        "404":
          description: not found resource
    put:
      tags:
      - recurso
      description: update the Recurso
      operationId: RecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Recurso content
        required: true
        schema:
          $ref: '#/definitions/models.Recurso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Recurso'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - recurso
      description: delete the Recurso
      operationId: RecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /recurso_apropiacion/:
    get:
      tags:
      - recurso_apropiacion
      description: get RecursoApropiacion
      operationId: RecursoApropiacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RecursoApropiacion'
        "404":
          description: not found resource
    post:
      tags:
      - recurso_apropiacion
      description: create RecursoApropiacion
      operationId: RecursoApropiacionController.Post
      parameters:
      - in: body
        name: body
        description: body for RecursoApropiacion content
        required: true
        schema:
          $ref: '#/definitions/models.RecursoApropiacion'
      responses:
        "201":
          description: '{int} models.RecursoApropiacion'
        "400":
          description: the request contains incorrect syntax
  /recurso_apropiacion/{id}:
    get:
      tags:
      - recurso_apropiacion
      description: get RecursoApropiacion by id
      operationId: RecursoApropiacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RecursoApropiacion'
        "404":
          description: not found resource
    put:
      tags:
      - recurso_apropiacion
      description: update the RecursoApropiacion
      operationId: RecursoApropiacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RecursoApropiacion content
        required: true
        schema:
          $ref: '#/definitions/models.RecursoApropiacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RecursoApropiacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - recurso_apropiacion
      description: delete the RecursoApropiacion
      operationId: RecursoApropiacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /recurso_atributo/:
    get:
      tags:
      - recurso_atributo
      description: get RecursoAtributo
      operationId: RecursoAtributoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RecursoAtributo'
        "404":
          description: not found resource
    post:
      tags:
      - recurso_atributo
      description: create RecursoAtributo
      operationId: RecursoAtributoController.Post
      parameters:
      - in: body
        name: body
        description: body for RecursoAtributo content
        required: true
        schema:
          $ref: '#/definitions/models.RecursoAtributo'
      responses:
        "201":
          description: '{int} models.RecursoAtributo'
        "400":
          description: the request contains incorrect syntax
  /recurso_atributo/{id}:
    get:
      tags:
      - recurso_atributo
      description: get RecursoAtributo by id
      operationId: RecursoAtributoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RecursoAtributo'
        "404":
          description: not found resource
    put:
      tags:
      - recurso_atributo
      description: update the RecursoAtributo
      operationId: RecursoAtributoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RecursoAtributo content
        required: true
        schema:
          $ref: '#/definitions/models.RecursoAtributo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RecursoAtributo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - recurso_atributo
      description: delete the RecursoAtributo
      operationId: RecursoAtributoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /relacion_contrato_estado/:
    get:
      tags:
      - relacion_contrato_estado
      description: get RelacionContratoEstado
      operationId: RelacionContratoEstadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionContratoEstado'
        "404":
          description: not found resource
    post:
      tags:
      - relacion_contrato_estado
      description: create RelacionContratoEstado
      operationId: RelacionContratoEstadoController.Post
      parameters:
      - in: body
        name: body
        description: body for RelacionContratoEstado content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionContratoEstado'
      responses:
        "201":
          description: '{int} models.RelacionContratoEstado'
        "400":
          description: the request contains incorrect syntax
  /relacion_contrato_estado/{id}:
    get:
      tags:
      - relacion_contrato_estado
      description: get RelacionContratoEstado by id
      operationId: RelacionContratoEstadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionContratoEstado'
        "404":
          description: not found resource
    put:
      tags:
      - relacion_contrato_estado
      description: update the RelacionContratoEstado
      operationId: RelacionContratoEstadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RelacionContratoEstado content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionContratoEstado'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionContratoEstado'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - relacion_contrato_estado
      description: delete the RelacionContratoEstado
      operationId: RelacionContratoEstadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /relacion_parametro/:
    get:
      tags:
      - relacion_parametro
      description: get RelacionParametro
      operationId: RelacionParametroController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionParametro'
        "404":
          description: not found resource
    post:
      tags:
      - relacion_parametro
      description: create RelacionParametro
      operationId: RelacionParametroController.Post
      parameters:
      - in: body
        name: body
        description: body for RelacionParametro content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionParametro'
      responses:
        "201":
          description: '{int} models.RelacionParametro'
        "400":
          description: the request contains incorrect syntax
  /relacion_parametro/{id}:
    get:
      tags:
      - relacion_parametro
      description: get RelacionParametro by id
      operationId: RelacionParametroController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionParametro'
        "404":
          description: not found resource
    put:
      tags:
      - relacion_parametro
      description: update the RelacionParametro
      operationId: RelacionParametroController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RelacionParametro content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionParametro'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionParametro'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - relacion_parametro
      description: delete the RelacionParametro
      operationId: RelacionParametroController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /relacion_parametro_contraloria/:
    get:
      tags:
      - relacion_parametro_contraloria
      description: get RelacionParametroContraloria
      operationId: RelacionParametroContraloriaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionParametroContraloria'
        "404":
          description: not found resource
    post:
      tags:
      - relacion_parametro_contraloria
      description: create RelacionParametroContraloria
      operationId: RelacionParametroContraloriaController.Post
      parameters:
      - in: body
        name: body
        description: body for RelacionParametroContraloria content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionParametroContraloria'
      responses:
        "201":
          description: '{int} models.RelacionParametroContraloria'
        "400":
          description: the request contains incorrect syntax
  /relacion_parametro_contraloria/{id}:
    get:
      tags:
      - relacion_parametro_contraloria
      description: get RelacionParametroContraloria by id
      operationId: RelacionParametroContraloriaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionParametroContraloria'
        "404":
          description: not found resource
    put:
      tags:
      - relacion_parametro_contraloria
      description: update the RelacionParametroContraloria
      operationId: RelacionParametroContraloriaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RelacionParametroContraloria content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionParametroContraloria'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionParametroContraloria'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - relacion_parametro_contraloria
      description: delete the RelacionParametroContraloria
      operationId: RelacionParametroContraloriaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /relacion_poliza_amparo/:
    get:
      tags:
      - relacion_poliza_amparo
      description: get RelacionPolizaAmparo
      operationId: RelacionPolizaAmparoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionPolizaAmparo'
        "404":
          description: not found resource
    post:
      tags:
      - relacion_poliza_amparo
      description: create RelacionPolizaAmparo
      operationId: RelacionPolizaAmparoController.Post
      parameters:
      - in: body
        name: body
        description: body for RelacionPolizaAmparo content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionPolizaAmparo'
      responses:
        "201":
          description: '{int} models.RelacionPolizaAmparo'
        "400":
          description: the request contains incorrect syntax
  /relacion_poliza_amparo/{id}:
    get:
      tags:
      - relacion_poliza_amparo
      description: get RelacionPolizaAmparo by id
      operationId: RelacionPolizaAmparoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionPolizaAmparo'
        "404":
          description: not found resource
    put:
      tags:
      - relacion_poliza_amparo
      description: update the RelacionPolizaAmparo
      operationId: RelacionPolizaAmparoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RelacionPolizaAmparo content
        required: true
        schema:
          $ref: '#/definitions/models.RelacionPolizaAmparo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RelacionPolizaAmparo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - relacion_poliza_amparo
      description: delete the RelacionPolizaAmparo
      operationId: RelacionPolizaAmparoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /reposicion/:
    get:
      tags:
      - reposicion
      description: get Reposicion
      operationId: ReposicionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Reposicion'
        "404":
          description: not found resource
    post:
      tags:
      - reposicion
      description: create Reposicion
      operationId: ReposicionController.Post
      parameters:
      - in: body
        name: body
        description: body for Reposicion content
        required: true
        schema:
          $ref: '#/definitions/models.Reposicion'
      responses:
        "201":
          description: '{int} models.Reposicion'
        "400":
          description: the request contains incorrect syntax
  /reposicion/{id}:
    get:
      tags:
      - reposicion
      description: get Reposicion by id
      operationId: ReposicionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Reposicion'
        "404":
          description: not found resource
    put:
      tags:
      - reposicion
      description: update the Reposicion
      operationId: ReposicionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Reposicion content
        required: true
        schema:
          $ref: '#/definitions/models.Reposicion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Reposicion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - reposicion
      description: delete the Reposicion
      operationId: ReposicionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /requisito_minimo/:
    get:
      tags:
      - requisito_minimo
      description: get RequisitoMinimo
      operationId: RequisitoMinimoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RequisitoMinimo'
        "404":
          description: not found resource
    post:
      tags:
      - requisito_minimo
      description: create RequisitoMinimo
      operationId: RequisitoMinimoController.Post
      parameters:
      - in: body
        name: body
        description: body for RequisitoMinimo content
        required: true
        schema:
          $ref: '#/definitions/models.RequisitoMinimo'
      responses:
        "201":
          description: '{int} models.RequisitoMinimo'
        "400":
          description: the request contains incorrect syntax
  /requisito_minimo/{id}:
    get:
      tags:
      - requisito_minimo
      description: get RequisitoMinimo by id
      operationId: RequisitoMinimoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RequisitoMinimo'
        "404":
          description: not found resource
    put:
      tags:
      - requisito_minimo
      description: update the RequisitoMinimo
      operationId: RequisitoMinimoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for RequisitoMinimo content
        required: true
        schema:
          $ref: '#/definitions/models.RequisitoMinimo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.RequisitoMinimo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - requisito_minimo
      description: delete the RequisitoMinimo
      operationId: RequisitoMinimoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /resolucion/:
    get:
      tags:
      - resolucion
      description: get Resolucion
      operationId: ResolucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Resolucion'
        "404":
          description: not found resource
    post:
      tags:
      - resolucion
      description: create Resolucion
      operationId: ResolucionController.Post
      parameters:
      - in: body
        name: body
        description: body for Resolucion content
        required: true
        schema:
          $ref: '#/definitions/models.Resolucion'
      responses:
        "201":
          description: '{int} models.Resolucion'
        "400":
          description: the request contains incorrect syntax
  /resolucion/{id}:
    get:
      tags:
      - resolucion
      description: get Resolucion by id
      operationId: ResolucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Resolucion'
        "404":
          description: not found resource
    put:
      tags:
      - resolucion
      description: update the Resolucion
      operationId: ResolucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Resolucion content
        required: true
        schema:
          $ref: '#/definitions/models.Resolucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Resolucion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - resolucion
      description: delete the Resolucion
      operationId: ResolucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /resolucion/CancelarResolucion/{id}:
    put:
      tags:
      - resolucion
      description: update the Resolucion
      operationId: ResolucionController.Cancelar
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Resolucion'
        "403":
          description: :id is not int
  /resolucion/GenerarResolucion:
    post:
      tags:
      - resolucion
      description: create Resolucion
      operationId: ResolucionController.Post
      responses:
        "201":
          description: '{int} models.Resolucion'
        "400":
          description: the request contains incorrect syntax
  /resolucion/RestaurarResolucion/{id}:
    put:
      tags:
      - resolucion
      description: update the Resolucion
      operationId: ResolucionController.Restaurar
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Resolucion'
        "403":
          description: :id is not int
  /resolucion_estado/:
    get:
      tags:
      - resolucion_estado
      description: get ResolucionEstado
      operationId: ResolucionEstadoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionEstado'
        "404":
          description: not found resource
    post:
      tags:
      - resolucion_estado
      description: create ResolucionEstado
      operationId: ResolucionEstadoController.Post
      parameters:
      - in: body
        name: body
        description: body for ResolucionEstado content
        required: true
        schema:
          $ref: '#/definitions/models.ResolucionEstado'
      responses:
        "201":
          description: '{int} models.ResolucionEstado'
        "400":
          description: the request contains incorrect syntax
  /resolucion_estado/{id}:
    get:
      tags:
      - resolucion_estado
      description: get ResolucionEstado by id
      operationId: ResolucionEstadoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionEstado'
        "404":
          description: not found resource
    put:
      tags:
      - resolucion_estado
      description: update the ResolucionEstado
      operationId: ResolucionEstadoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ResolucionEstado content
        required: true
        schema:
          $ref: '#/definitions/models.ResolucionEstado'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionEstado'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - resolucion_estado
      description: delete the ResolucionEstado
      operationId: ResolucionEstadoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /resolucion_vinculacion/:
    get:
      tags:
      - resolucion_vinculacion
      description: get ResolucionVinculacion
      operationId: ResolucionVinculacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionVinculacionDocente'
        "404":
          description: not found resource
  /resolucion_vinculacion/Aprobada:
    get:
      tags:
      - resolucion_vinculacion
      description: get ResolucionVinculacion
      operationId: ResolucionVinculacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: integer
        format: int64
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: integer
        format: int64
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionVinculacionDocente'
        "404":
          description: not found resource
  /resolucion_vinculacion/expedidas_vigencia_periodo:
    get:
      tags:
      - resolucion_vinculacion
      description: Agrupa los contratos de una preliquidacion segun mes, año y nomina
        para preliquidaicones en estado CERRADA
      operationId: ResolucionVinculacionController.GetAllExpedidasVigenciaPeriodo
      parameters:
      - in: query
        name: vigencia
        description: nomina a listar
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Preliquidacion_x_contratos'
        "403":
          description: body is empty
  /resolucion_vinculacion/expedidas_vigencia_periodo_vinculacion:
    get:
      tags:
      - resolucion_vinculacion
      description: Muestra resoluciones de tipo vinculación para cancelar y modificar
      operationId: ResolucionVinculacionController.GetAllExpedidasVigenciaPeriodoVinculacion
      parameters:
      - in: query
        name: vigencia
        description: nomina a listar
        type: string
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/models.Preliquidacion_x_contratos'
        "403":
          description: body is empty
  /resolucion_vinculacion_docente/:
    get:
      tags:
      - resolucion_vinculacion_docente
      description: get ResolucionVinculacionDocente
      operationId: ResolucionVinculacionDocenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionVinculacionDocente'
        "404":
          description: not found resource
    post:
      tags:
      - resolucion_vinculacion_docente
      description: create ResolucionVinculacionDocente
      operationId: ResolucionVinculacionDocenteController.Post
      parameters:
      - in: body
        name: body
        description: body for ResolucionVinculacionDocente content
        required: true
        schema:
          $ref: '#/definitions/models.ResolucionVinculacionDocente'
      responses:
        "201":
          description: '{int} models.ResolucionVinculacionDocente'
        "400":
          description: the request contains incorrect syntax
  /resolucion_vinculacion_docente/{id}:
    get:
      tags:
      - resolucion_vinculacion_docente
      description: get ResolucionVinculacionDocente by id
      operationId: ResolucionVinculacionDocenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionVinculacionDocente'
        "404":
          description: not found resource
    put:
      tags:
      - resolucion_vinculacion_docente
      description: update the ResolucionVinculacionDocente
      operationId: ResolucionVinculacionDocenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ResolucionVinculacionDocente content
        required: true
        schema:
          $ref: '#/definitions/models.ResolucionVinculacionDocente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ResolucionVinculacionDocente'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - resolucion_vinculacion_docente
      description: delete the ResolucionVinculacionDocente
      operationId: ResolucionVinculacionDocenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /salida/:
    get:
      tags:
      - salida
      description: get Salida
      operationId: SalidaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Salida'
        "404":
          description: not found resource
    post:
      tags:
      - salida
      description: create Salida
      operationId: SalidaController.Post
      parameters:
      - in: body
        name: body
        description: body for Salida content
        required: true
        schema:
          $ref: '#/definitions/models.Salida'
      responses:
        "201":
          description: '{int} models.Salida'
        "400":
          description: the request contains incorrect syntax
  /salida/{id}:
    get:
      tags:
      - salida
      description: get Salida by id
      operationId: SalidaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Salida'
        "404":
          description: not found resource
    put:
      tags:
      - salida
      description: update the Salida
      operationId: SalidaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Salida content
        required: true
        schema:
          $ref: '#/definitions/models.Salida'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Salida'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - salida
      description: delete the Salida
      operationId: SalidaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /salida_bodega/:
    get:
      tags:
      - salida_bodega
      description: get SalidaBodega
      operationId: SalidaBodegaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SalidaBodega'
        "404":
          description: not found resource
    post:
      tags:
      - salida_bodega
      description: create SalidaBodega
      operationId: SalidaBodegaController.Post
      parameters:
      - in: body
        name: body
        description: body for SalidaBodega content
        required: true
        schema:
          $ref: '#/definitions/models.SalidaBodega'
      responses:
        "201":
          description: '{int} models.SalidaBodega'
        "400":
          description: the request contains incorrect syntax
  /salida_bodega/{id}:
    get:
      tags:
      - salida_bodega
      description: get SalidaBodega by id
      operationId: SalidaBodegaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SalidaBodega'
        "404":
          description: not found resource
    put:
      tags:
      - salida_bodega
      description: update the SalidaBodega
      operationId: SalidaBodegaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SalidaBodega content
        required: true
        schema:
          $ref: '#/definitions/models.SalidaBodega'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SalidaBodega'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - salida_bodega
      description: delete the SalidaBodega
      operationId: SalidaBodegaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /solicitud_disponibilidad/:
    get:
      tags:
      - solicitud_disponibilidad
      description: get SolicitudDisponibilidad
      operationId: SolicitudDisponibilidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudDisponibilidad'
        "404":
          description: not found resource
    post:
      tags:
      - solicitud_disponibilidad
      description: create SolicitudDisponibilidad it calculates the consecutive number
        and insert the availability CDP request
      operationId: SolicitudDisponibilidadController.Post
      parameters:
      - in: body
        name: body
        description: body for SolicitudDisponibilidad content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudDisponibilidad'
      responses:
        "201":
          description: '{int} models.SolicitudDisponibilidad'
        "400":
          description: the request contains incorrect syntax
  /solicitud_disponibilidad/{id}:
    get:
      tags:
      - solicitud_disponibilidad
      description: get SolicitudDisponibilidad by id
      operationId: SolicitudDisponibilidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudDisponibilidad'
        "404":
          description: not found resource
    put:
      tags:
      - solicitud_disponibilidad
      description: update the SolicitudDisponibilidad
      operationId: SolicitudDisponibilidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SolicitudDisponibilidad content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudDisponibilidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudDisponibilidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - solicitud_disponibilidad
      description: delete the SolicitudDisponibilidad
      operationId: SolicitudDisponibilidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /solicitud_rp/:
    get:
      tags:
      - solicitud_rp
      description: get SolicitudRp
      operationId: SolicitudRpController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudRp'
        "404":
          description: not found resource
    post:
      tags:
      - solicitud_rp
      description: create SolicitudRp
      operationId: SolicitudRpController.Post
      parameters:
      - in: body
        name: body
        description: body for SolicitudRp content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudRp'
      responses:
        "201":
          description: '{int} models.SolicitudRp'
        "400":
          description: the request contains incorrect syntax
  /solicitud_rp/{id}:
    get:
      tags:
      - solicitud_rp
      description: get SolicitudRp by id
      operationId: SolicitudRpController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudRp'
        "404":
          description: not found resource
    put:
      tags:
      - solicitud_rp
      description: update the SolicitudRp
      operationId: SolicitudRpController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SolicitudRp content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudRp'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SolicitudRp'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - solicitud_rp
      description: delete the SolicitudRp
      operationId: SolicitudRpController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /solicitud_rp/AddSolicitudRpTr:
    post:
      tags:
      - solicitud_rp
      description: create SolicitudRp
      operationId: SolicitudRpController.AddSolicitudRpTr
      parameters:
      - in: body
        name: body
        description: body for SolicitudRp content
        required: true
        schema:
          $ref: '#/definitions/models.SolicitudRp'
      responses:
        "201":
          description: '{int} models.SolicitudRp'
        "403":
          description: body is empty
  /soporte_pago_mensual/:
    get:
      tags:
      - soporte_pago_mensual
      description: get SoportePagoMensual
      operationId: SoportePagoMensualController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoportePagoMensual'
        "404":
          description: not found resource
    post:
      tags:
      - soporte_pago_mensual
      description: create SoportePagoMensual
      operationId: SoportePagoMensualController.Post
      parameters:
      - in: body
        name: body
        description: body for SoportePagoMensual content
        required: true
        schema:
          $ref: '#/definitions/models.SoportePagoMensual'
      responses:
        "201":
          description: '{int} models.SoportePagoMensual'
        "400":
          description: the request contains incorrect syntax
  /soporte_pago_mensual/{id}:
    get:
      tags:
      - soporte_pago_mensual
      description: get SoportePagoMensual by id
      operationId: SoportePagoMensualController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoportePagoMensual'
        "404":
          description: not found resource
    put:
      tags:
      - soporte_pago_mensual
      description: update the SoportePagoMensual
      operationId: SoportePagoMensualController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SoportePagoMensual content
        required: true
        schema:
          $ref: '#/definitions/models.SoportePagoMensual'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SoportePagoMensual'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - soporte_pago_mensual
      description: delete the SoportePagoMensual
      operationId: SoportePagoMensualController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /subgrupo/:
    get:
      tags:
      - subgrupo
      description: get Subgrupo
      operationId: SubgrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Subgrupo'
        "404":
          description: not found resource
    post:
      tags:
      - subgrupo
      description: create Subgrupo
      operationId: SubgrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for Subgrupo content
        required: true
        schema:
          $ref: '#/definitions/models.Subgrupo'
      responses:
        "201":
          description: '{int} models.Subgrupo'
        "400":
          description: the request contains incorrect syntax
  /subgrupo/{id}:
    get:
      tags:
      - subgrupo
      description: get Subgrupo by id
      operationId: SubgrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Subgrupo'
        "404":
          description: not found resource
    put:
      tags:
      - subgrupo
      description: update the Subgrupo
      operationId: SubgrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for Subgrupo content
        required: true
        schema:
          $ref: '#/definitions/models.Subgrupo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.Subgrupo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - subgrupo
      description: delete the Subgrupo
      operationId: SubgrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /subgrupo_catalogo/:
    get:
      tags:
      - subgrupo_catalogo
      description: get SubgrupoCatalogo
      operationId: SubgrupoCatalogoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubgrupoCatalogo'
        "404":
          description: not found resource
    post:
      tags:
      - subgrupo_catalogo
      description: create SubgrupoCatalogo
      operationId: SubgrupoCatalogoController.Post
      parameters:
      - in: body
        name: body
        description: body for SubgrupoCatalogo content
        required: true
        schema:
          $ref: '#/definitions/models.SubgrupoCatalogo'
      responses:
        "201":
          description: '{int} models.SubgrupoCatalogo'
        "400":
          description: the request contains incorrect syntax
  /subgrupo_catalogo/{id}:
    get:
      tags:
      - subgrupo_catalogo
      description: get SubgrupoCatalogo by id
      operationId: SubgrupoCatalogoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubgrupoCatalogo'
        "404":
          description: not found resource
    put:
      tags:
      - subgrupo_catalogo
      description: update the SubgrupoCatalogo
      operationId: SubgrupoCatalogoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SubgrupoCatalogo content
        required: true
        schema:
          $ref: '#/definitions/models.SubgrupoCatalogo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubgrupoCatalogo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - subgrupo_catalogo
      description: delete the SubgrupoCatalogo
      operationId: SubgrupoCatalogoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /subgrupo_subgrupo/:
    get:
      tags:
      - subgrupo_subgrupo
      description: get SubgrupoSubgrupo
      operationId: SubgrupoSubgrupoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubgrupoSubgrupo'
        "404":
          description: not found resource
    post:
      tags:
      - subgrupo_subgrupo
      description: create SubgrupoSubgrupo
      operationId: SubgrupoSubgrupoController.Post
      parameters:
      - in: body
        name: body
        description: body for SubgrupoSubgrupo content
        required: true
        schema:
          $ref: '#/definitions/models.SubgrupoSubgrupo'
      responses:
        "201":
          description: '{int} models.SubgrupoSubgrupo'
        "400":
          description: the request contains incorrect syntax
  /subgrupo_subgrupo/{id}:
    get:
      tags:
      - subgrupo_subgrupo
      description: get SubgrupoSubgrupo by id
      operationId: SubgrupoSubgrupoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubgrupoSubgrupo'
        "404":
          description: not found resource
    put:
      tags:
      - subgrupo_subgrupo
      description: update the SubgrupoSubgrupo
      operationId: SubgrupoSubgrupoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SubgrupoSubgrupo content
        required: true
        schema:
          $ref: '#/definitions/models.SubgrupoSubgrupo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubgrupoSubgrupo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - subgrupo_subgrupo
      description: delete the SubgrupoSubgrupo
      operationId: SubgrupoSubgrupoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /subtipo_movimiento/:
    get:
      tags:
      - subtipo_movimiento
      description: get SubtipoMovimiento
      operationId: SubtipoMovimientoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubtipoMovimiento'
        "404":
          description: not found resource
    post:
      tags:
      - subtipo_movimiento
      description: create SubtipoMovimiento
      operationId: SubtipoMovimientoController.Post
      parameters:
      - in: body
        name: body
        description: body for SubtipoMovimiento content
        required: true
        schema:
          $ref: '#/definitions/models.SubtipoMovimiento'
      responses:
        "201":
          description: '{int} models.SubtipoMovimiento'
        "400":
          description: the request contains incorrect syntax
  /subtipo_movimiento/{id}:
    get:
      tags:
      - subtipo_movimiento
      description: get SubtipoMovimiento by id
      operationId: SubtipoMovimientoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubtipoMovimiento'
        "404":
          description: not found resource
    put:
      tags:
      - subtipo_movimiento
      description: update the SubtipoMovimiento
      operationId: SubtipoMovimientoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SubtipoMovimiento content
        required: true
        schema:
          $ref: '#/definitions/models.SubtipoMovimiento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SubtipoMovimiento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - subtipo_movimiento
      description: delete the SubtipoMovimiento
      operationId: SubtipoMovimientoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /supervisor_contrato/:
    get:
      tags:
      - supervisor_contrato
      description: get SupervisorContrato
      operationId: SupervisorContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SupervisorContrato'
        "404":
          description: not found resource
    post:
      tags:
      - supervisor_contrato
      description: create SupervisorContrato
      operationId: SupervisorContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for SupervisorContrato content
        required: true
        schema:
          $ref: '#/definitions/models.SupervisorContrato'
      responses:
        "201":
          description: '{int} models.SupervisorContrato'
        "400":
          description: the request contains incorrect syntax
  /supervisor_contrato/{id}:
    get:
      tags:
      - supervisor_contrato
      description: get SupervisorContrato by id
      operationId: SupervisorContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SupervisorContrato'
        "404":
          description: not found resource
    put:
      tags:
      - supervisor_contrato
      description: update the SupervisorContrato
      operationId: SupervisorContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for SupervisorContrato content
        required: true
        schema:
          $ref: '#/definitions/models.SupervisorContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.SupervisorContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - supervisor_contrato
      description: delete the SupervisorContrato
      operationId: SupervisorContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_bien/:
    get:
      tags:
      - tipo_bien
      description: get TipoBien
      operationId: TipoBienController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoBien'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_bien
      description: create TipoBien
      operationId: TipoBienController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoBien content
        required: true
        schema:
          $ref: '#/definitions/models.TipoBien'
      responses:
        "201":
          description: '{int} models.TipoBien'
        "400":
          description: the request contains incorrect syntax
  /tipo_bien/{id}:
    get:
      tags:
      - tipo_bien
      description: get TipoBien by id
      operationId: TipoBienController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoBien'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_bien
      description: update the TipoBien
      operationId: TipoBienController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoBien content
        required: true
        schema:
          $ref: '#/definitions/models.TipoBien'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoBien'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_bien
      description: delete the TipoBien
      operationId: TipoBienController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_concepto_nomina/:
    get:
      tags:
      - tipo_concepto_nomina
      description: get TipoConceptoNomina
      operationId: TipoConceptoNominaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoConceptoNomina'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_concepto_nomina
      description: create TipoConceptoNomina
      operationId: TipoConceptoNominaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoConceptoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.TipoConceptoNomina'
      responses:
        "201":
          description: '{int} models.TipoConceptoNomina'
        "400":
          description: the request contains incorrect syntax
  /tipo_concepto_nomina/{id}:
    get:
      tags:
      - tipo_concepto_nomina
      description: get TipoConceptoNomina by id
      operationId: TipoConceptoNominaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoConceptoNomina'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_concepto_nomina
      description: update the TipoConceptoNomina
      operationId: TipoConceptoNominaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoConceptoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.TipoConceptoNomina'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoConceptoNomina'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_concepto_nomina
      description: delete the TipoConceptoNomina
      operationId: TipoConceptoNominaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_contrato/:
    get:
      tags:
      - tipo_contrato
      description: get TipoContrato
      operationId: TipoContratoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContrato'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_contrato
      description: create TipoContrato
      operationId: TipoContratoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContrato'
      responses:
        "201":
          description: '{int} models.TipoContrato'
        "400":
          description: the request contains incorrect syntax
  /tipo_contrato/{id}:
    get:
      tags:
      - tipo_contrato
      description: get TipoContrato by id
      operationId: TipoContratoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContrato'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_contrato
      description: update the TipoContrato
      operationId: TipoContratoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoContrato content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContrato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContrato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_contrato
      description: delete the TipoContrato
      operationId: TipoContratoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_contrato_necesidad/:
    get:
      tags:
      - tipo_contrato_necesidad
      description: get TipoContratoNecesidad
      operationId: TipoContratoNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContratoNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_contrato_necesidad
      description: create TipoContratoNecesidad
      operationId: TipoContratoNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoContratoNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContratoNecesidad'
      responses:
        "201":
          description: '{int} models.TipoContratoNecesidad'
        "400":
          description: the request contains incorrect syntax
  /tipo_contrato_necesidad/{id}:
    get:
      tags:
      - tipo_contrato_necesidad
      description: get TipoContratoNecesidad by id
      operationId: TipoContratoNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContratoNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_contrato_necesidad
      description: update the TipoContratoNecesidad
      operationId: TipoContratoNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoContratoNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoContratoNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoContratoNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_contrato_necesidad
      description: delete the TipoContratoNecesidad
      operationId: TipoContratoNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_dato/:
    get:
      tags:
      - tipo_dato
      description: get TipoDato
      operationId: TipoDatoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDato'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_dato
      description: create TipoDato
      operationId: TipoDatoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoDato content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDato'
      responses:
        "201":
          description: '{int} models.TipoDato'
        "400":
          description: the request contains incorrect syntax
  /tipo_dato/{id}:
    get:
      tags:
      - tipo_dato
      description: get TipoDato by id
      operationId: TipoDatoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDato'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_dato
      description: update the TipoDato
      operationId: TipoDatoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoDato content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDato'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDato'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_dato
      description: delete the TipoDato
      operationId: TipoDatoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_documento_soporte/:
    get:
      tags:
      - tipo_documento_soporte
      description: get TipoDocumentoSoporte
      operationId: TipoDocumentoSoporteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDocumentoSoporte'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_documento_soporte
      description: create TipoDocumentoSoporte
      operationId: TipoDocumentoSoporteController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoDocumentoSoporte content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDocumentoSoporte'
      responses:
        "201":
          description: '{int} models.TipoDocumentoSoporte'
        "400":
          description: the request contains incorrect syntax
  /tipo_documento_soporte/{id}:
    get:
      tags:
      - tipo_documento_soporte
      description: get TipoDocumentoSoporte by id
      operationId: TipoDocumentoSoporteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDocumentoSoporte'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_documento_soporte
      description: update the TipoDocumentoSoporte
      operationId: TipoDocumentoSoporteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoDocumentoSoporte content
        required: true
        schema:
          $ref: '#/definitions/models.TipoDocumentoSoporte'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoDocumentoSoporte'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_documento_soporte
      description: delete the TipoDocumentoSoporte
      operationId: TipoDocumentoSoporteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_entrada/:
    get:
      tags:
      - tipo_entrada
      description: get TipoEntrada
      operationId: TipoEntradaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEntrada'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_entrada
      description: create TipoEntrada
      operationId: TipoEntradaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoEntrada content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEntrada'
      responses:
        "201":
          description: '{int} models.TipoEntrada'
        "400":
          description: the request contains incorrect syntax
  /tipo_entrada/{id}:
    get:
      tags:
      - tipo_entrada
      description: get TipoEntrada by id
      operationId: TipoEntradaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEntrada'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_entrada
      description: update the TipoEntrada
      operationId: TipoEntradaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoEntrada content
        required: true
        schema:
          $ref: '#/definitions/models.TipoEntrada'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoEntrada'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_entrada
      description: delete the TipoEntrada
      operationId: TipoEntradaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_financiacion_necesidad/:
    get:
      tags:
      - tipo_financiacion_necesidad
      description: get TipoFinanciacionNecesidad
      operationId: TipoFinanciacionNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoFinanciacionNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_financiacion_necesidad
      description: create TipoFinanciacionNecesidad
      operationId: TipoFinanciacionNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoFinanciacionNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoFinanciacionNecesidad'
      responses:
        "201":
          description: '{int} models.TipoFinanciacionNecesidad'
        "400":
          description: the request contains incorrect syntax
  /tipo_financiacion_necesidad/{id}:
    get:
      tags:
      - tipo_financiacion_necesidad
      description: get TipoFinanciacionNecesidad by id
      operationId: TipoFinanciacionNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoFinanciacionNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_financiacion_necesidad
      description: update the TipoFinanciacionNecesidad
      operationId: TipoFinanciacionNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoFinanciacionNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoFinanciacionNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoFinanciacionNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_financiacion_necesidad
      description: delete the TipoFinanciacionNecesidad
      operationId: TipoFinanciacionNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_movimiento/:
    get:
      tags:
      - tipo_movimiento
      description: get TipoMovimiento
      operationId: TipoMovimientoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoMovimiento'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_movimiento
      description: create TipoMovimiento
      operationId: TipoMovimientoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoMovimiento content
        required: true
        schema:
          $ref: '#/definitions/models.TipoMovimiento'
      responses:
        "201":
          description: '{int} models.TipoMovimiento'
        "400":
          description: the request contains incorrect syntax
  /tipo_movimiento/{id}:
    get:
      tags:
      - tipo_movimiento
      description: get TipoMovimiento by id
      operationId: TipoMovimientoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoMovimiento'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_movimiento
      description: update the TipoMovimiento
      operationId: TipoMovimientoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoMovimiento content
        required: true
        schema:
          $ref: '#/definitions/models.TipoMovimiento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoMovimiento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_movimiento
      description: delete the TipoMovimiento
      operationId: TipoMovimientoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_necesidad/:
    get:
      tags:
      - tipo_necesidad
      description: get TipoNecesidad
      operationId: TipoNecesidadController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNecesidad'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_necesidad
      description: create TipoNecesidad
      operationId: TipoNecesidadController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoNecesidad'
      responses:
        "201":
          description: '{int} models.TipoNecesidad'
        "400":
          description: the request contains incorrect syntax
  /tipo_necesidad/{id}:
    get:
      tags:
      - tipo_necesidad
      description: get TipoNecesidad by id
      operationId: TipoNecesidadController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNecesidad'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_necesidad
      description: update the TipoNecesidad
      operationId: TipoNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TipoNecesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNecesidad'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_necesidad
      description: delete the TipoNecesidad
      operationId: TipoNecesidadController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_nomina/:
    get:
      tags:
      - tipo_nomina
      description: get TipoNomina
      operationId: TipoNominaController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNomina'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_nomina
      description: create TipoNomina
      operationId: TipoNominaController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.TipoNomina'
      responses:
        "201":
          description: '{int} models.TipoNomina'
        "400":
          description: the request contains incorrect syntax
  /tipo_nomina/{id}:
    get:
      tags:
      - tipo_nomina
      description: get TipoNomina by id
      operationId: TipoNominaController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNomina'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_nomina
      description: update the TipoNomina
      operationId: TipoNominaController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoNomina content
        required: true
        schema:
          $ref: '#/definitions/models.TipoNomina'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoNomina'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_nomina
      description: delete the TipoNomina
      operationId: TipoNominaController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_pago/:
    get:
      tags:
      - tipo_pago
      description: get TipoPago
      operationId: TipoPagoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPago'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_pago
      description: create TipoPago
      operationId: TipoPagoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoPago content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPago'
      responses:
        "201":
          description: '{int} models.TipoPago'
        "400":
          description: the request contains incorrect syntax
  /tipo_pago/{id}:
    get:
      tags:
      - tipo_pago
      description: get TipoPago by id
      operationId: TipoPagoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPago'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_pago
      description: update the TipoPago
      operationId: TipoPagoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoPago content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPago'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPago'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_pago
      description: delete the TipoPago
      operationId: TipoPagoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_pension/:
    get:
      tags:
      - tipo_pension
      description: get TipoPension
      operationId: TipoPensionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPension'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_pension
      description: create TipoPension
      operationId: TipoPensionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoPension content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPension'
      responses:
        "201":
          description: '{int} models.TipoPension'
        "400":
          description: the request contains incorrect syntax
  /tipo_pension/{id}:
    get:
      tags:
      - tipo_pension
      description: get TipoPension by id
      operationId: TipoPensionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPension'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_pension
      description: update the TipoPension
      operationId: TipoPensionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoPension content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPension'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPension'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_pension
      description: delete the TipoPension
      operationId: TipoPensionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_preliquidacion/:
    get:
      tags:
      - tipo_preliquidacion
      description: get TipoPreliquidacion
      operationId: TipoPreliquidacionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPreliquidacion'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_preliquidacion
      description: create TipoPreliquidacion
      operationId: TipoPreliquidacionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoPreliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPreliquidacion'
      responses:
        "201":
          description: '{int} models.TipoPreliquidacion'
        "400":
          description: the request contains incorrect syntax
  /tipo_preliquidacion/{id}:
    get:
      tags:
      - tipo_preliquidacion
      description: get TipoPreliquidacion by id
      operationId: TipoPreliquidacionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPreliquidacion'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_preliquidacion
      description: update the TipoPreliquidacion
      operationId: TipoPreliquidacionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoPreliquidacion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoPreliquidacion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoPreliquidacion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_preliquidacion
      description: delete the TipoPreliquidacion
      operationId: TipoPreliquidacionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_recurso/:
    get:
      tags:
      - tipo_recurso
      description: get TipoRecurso
      operationId: TipoRecursoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoRecurso'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_recurso
      description: create TipoRecurso
      operationId: TipoRecursoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRecurso'
      responses:
        "201":
          description: '{int} models.TipoRecurso'
        "400":
          description: the request contains incorrect syntax
  /tipo_recurso/{id}:
    get:
      tags:
      - tipo_recurso
      description: get TipoRecurso by id
      operationId: TipoRecursoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoRecurso'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_recurso
      description: update the TipoRecurso
      operationId: TipoRecursoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoRecurso content
        required: true
        schema:
          $ref: '#/definitions/models.TipoRecurso'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoRecurso'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_recurso
      description: delete the TipoRecurso
      operationId: TipoRecursoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_resolucion/:
    get:
      tags:
      - tipo_resolucion
      description: get TipoResolucion
      operationId: TipoResolucionController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoResolucion'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_resolucion
      description: create TipoResolucion
      operationId: TipoResolucionController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoResolucion'
      responses:
        "201":
          description: '{int} models.TipoResolucion'
        "400":
          description: the request contains incorrect syntax
  /tipo_resolucion/{id}:
    get:
      tags:
      - tipo_resolucion
      description: get TipoResolucion by id
      operationId: TipoResolucionController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoResolucion'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_resolucion
      description: update the TipoResolucion
      operationId: TipoResolucionController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoResolucion content
        required: true
        schema:
          $ref: '#/definitions/models.TipoResolucion'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoResolucion'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_resolucion
      description: delete the TipoResolucion
      operationId: TipoResolucionController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_upc/:
    get:
      tags:
      - tipo_upc
      description: get TipoUpc
      operationId: TipoUpcController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoUpc'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_upc
      description: create TipoUpc
      operationId: TipoUpcController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoUpc content
        required: true
        schema:
          $ref: '#/definitions/models.TipoUpc'
      responses:
        "201":
          description: '{int} models.TipoUpc'
        "400":
          description: the request contains incorrect syntax
  /tipo_upc/{id}:
    get:
      tags:
      - tipo_upc
      description: get TipoUpc by id
      operationId: TipoUpcController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoUpc'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_upc
      description: update the TipoUpc
      operationId: TipoUpcController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoUpc content
        required: true
        schema:
          $ref: '#/definitions/models.TipoUpc'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoUpc'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_upc
      description: delete the TipoUpc
      operationId: TipoUpcController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tipo_valor_amparo/:
    get:
      tags:
      - tipo_valor_amparo
      description: get TipoValorAmparo
      operationId: TipoValorAmparoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoValorAmparo'
        "404":
          description: not found resource
    post:
      tags:
      - tipo_valor_amparo
      description: create TipoValorAmparo
      operationId: TipoValorAmparoController.Post
      parameters:
      - in: body
        name: body
        description: body for TipoValorAmparo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoValorAmparo'
      responses:
        "201":
          description: '{int} models.TipoValorAmparo'
        "400":
          description: the request contains incorrect syntax
  /tipo_valor_amparo/{id}:
    get:
      tags:
      - tipo_valor_amparo
      description: get TipoValorAmparo by id
      operationId: TipoValorAmparoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoValorAmparo'
        "404":
          description: not found resource
    put:
      tags:
      - tipo_valor_amparo
      description: update the TipoValorAmparo
      operationId: TipoValorAmparoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TipoValorAmparo content
        required: true
        schema:
          $ref: '#/definitions/models.TipoValorAmparo'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TipoValorAmparo'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - tipo_valor_amparo
      description: delete the TipoValorAmparo
      operationId: TipoValorAmparoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /tr_aprobacion_masiva_documentos/:
    post:
      tags:
      - tr_aprobacion_masiva_documentos
      description: create AprobarDocumentos
      operationId: TrAprobacionMasivaDocumentosController.AprobarDocumentos
      responses:
        "200":
          description: ""
        "403":
          description: body is empty
  /tr_aprobacion_masiva_pagos/:
    post:
      tags:
      - tr_aprobacion_masiva_pagos
      description: create AprobarPagos
      operationId: TrAprobacionMasivaPagosController.AprobarPagos
      responses:
        "200":
          description: ""
        "403":
          description: body is empty
  /tr_aprobacion_masiva_soportes_contratistas/:
    post:
      tags:
      - tr_aprobacion_masiva_soportes_contratistas
      description: create AprobarSoportesContratistas
      operationId: TrAprobacionMasivaSoportesContratistasController.AprobarSoportesContratistas
      responses:
        "200":
          description: ""
        "403":
          description: body is empty
  /tr_necesidad/:
    post:
      tags:
      - tr_necesidad
      description: insert the TrNecesidad in the tables Necesidad,FuenteFinanciacionRubroNecesidad,
        MarcoLegalNecesidad, DependenciaNecesidad, ActividadEspecifica, ActividadEconomicaNecesidad,
        DetalleServicioNecesidad, EspecificacionTecnica, RequisitoMinimo
      operationId: TrNecesidadController.TrNecesidad
      parameters:
      - in: body
        name: body
        description: body for TrNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.TrNecesidad'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/msg'
        "403":
          description: :id is not int
  /tr_necesidad/{id}:
    put:
      tags:
      - tr_necesidad
      description: update the TrNecesidad it calculates the consecutive number and
        update the need
      operationId: TrNecesidadController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for TrNecesidad content
        required: true
        schema:
          $ref: '#/definitions/models.Necesidad'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.TrNecesidad'
        "400":
          description: the request contains incorrect syntax
  /tr_necesidad_docente/:
    post:
      tags:
      - tr_necesidad_docente
      description: insert the TrNecesidadDocente in the tables Necesidad, FuenteFinanciacionRubroNecesidad,
        MarcoLegalNecesidad, DependenciaNecesidad
      operationId: TrNecesidadDocenteController.TrNecesidadDocente
      parameters:
      - in: body
        name: body
        description: body for TrNecesidadDocente content
        required: true
        schema:
          $ref: '#/definitions/models.TrNecesidadDocente'
      responses:
        "201":
          description: ""
          schema:
            $ref: '#/definitions/msg'
        "403":
          description: :id is not int
  /upc_adicional/:
    get:
      tags:
      - upc_adicional
      description: get UpcAdicional
      operationId: UpcAdicionalController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UpcAdicional'
        "404":
          description: not found resource
    post:
      tags:
      - upc_adicional
      description: create UpcAdicional
      operationId: UpcAdicionalController.Post
      parameters:
      - in: body
        name: body
        description: body for UpcAdicional content
        required: true
        schema:
          $ref: '#/definitions/models.UpcAdicional'
      responses:
        "201":
          description: '{int} models.UpcAdicional'
        "400":
          description: the request contains incorrect syntax
  /upc_adicional/{id}:
    get:
      tags:
      - upc_adicional
      description: get UpcAdicional by id
      operationId: UpcAdicionalController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UpcAdicional'
        "404":
          description: not found resource
    put:
      tags:
      - upc_adicional
      description: update the UpcAdicional
      operationId: UpcAdicionalController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for UpcAdicional content
        required: true
        schema:
          $ref: '#/definitions/models.UpcAdicional'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.UpcAdicional'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - upc_adicional
      description: delete the UpcAdicional
      operationId: UpcAdicionalController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /valorizacion_elemento/:
    get:
      tags:
      - valorizacion_elemento
      description: get ValorizacionElemento
      operationId: ValorizacionElementoController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValorizacionElemento'
        "404":
          description: not found resource
    post:
      tags:
      - valorizacion_elemento
      description: create ValorizacionElemento
      operationId: ValorizacionElementoController.Post
      parameters:
      - in: body
        name: body
        description: body for ValorizacionElemento content
        required: true
        schema:
          $ref: '#/definitions/models.ValorizacionElemento'
      responses:
        "201":
          description: '{int} models.ValorizacionElemento'
        "400":
          description: the request contains incorrect syntax
  /valorizacion_elemento/{id}:
    get:
      tags:
      - valorizacion_elemento
      description: get ValorizacionElemento by id
      operationId: ValorizacionElementoController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValorizacionElemento'
        "404":
          description: not found resource
    put:
      tags:
      - valorizacion_elemento
      description: update the ValorizacionElemento
      operationId: ValorizacionElementoController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ValorizacionElemento content
        required: true
        schema:
          $ref: '#/definitions/models.ValorizacionElemento'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ValorizacionElemento'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - valorizacion_elemento
      description: delete the ValorizacionElemento
      operationId: ValorizacionElementoController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /verificacion_nicsp/:
    get:
      tags:
      - verificacion_nicsp
      description: get VerificacionNicsp
      operationId: VerificacionNicspController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VerificacionNicsp'
        "404":
          description: not found resource
    post:
      tags:
      - verificacion_nicsp
      description: create VerificacionNicsp
      operationId: VerificacionNicspController.Post
      parameters:
      - in: body
        name: body
        description: body for VerificacionNicsp content
        required: true
        schema:
          $ref: '#/definitions/models.VerificacionNicsp'
      responses:
        "201":
          description: '{int} models.VerificacionNicsp'
        "400":
          description: the request contains incorrect syntax
  /verificacion_nicsp/{id}:
    get:
      tags:
      - verificacion_nicsp
      description: get VerificacionNicsp by id
      operationId: VerificacionNicspController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VerificacionNicsp'
        "404":
          description: not found resource
    put:
      tags:
      - verificacion_nicsp
      description: update the VerificacionNicsp
      operationId: VerificacionNicspController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for VerificacionNicsp content
        required: true
        schema:
          $ref: '#/definitions/models.VerificacionNicsp'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VerificacionNicsp'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - verificacion_nicsp
      description: delete the VerificacionNicsp
      operationId: VerificacionNicspController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /vigencia_contrato/:
    get:
      tags:
      - vigencia_contrato
      description: create VigenciaContrato
      operationId: VigenciaContratoController.VigenciaContrato
      parameters:
      - in: body
        name: body
        description: body for VigenciaContrato content
        required: true
        schema:
          $ref: '#/definitions/models.VigenciaContrato'
      responses:
        "201":
          description: '{int}'
        "403":
          description: body is empty
  /vinculacion_docente/:
    get:
      tags:
      - vinculacion_docente
      description: get VinculacionDocente
      operationId: VinculacionDocenteController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VinculacionDocente'
        "404":
          description: not found resource
    post:
      tags:
      - vinculacion_docente
      description: create VinculacionDocente
      operationId: VinculacionDocenteController.Post
      parameters:
      - in: body
        name: body
        description: body for VinculacionDocente content
        required: true
        schema:
          $ref: '#/definitions/models.VinculacionDocente'
      responses:
        "201":
          description: '{int} models.VinculacionDocente'
        "400":
          description: the request contains incorrect syntax
  /vinculacion_docente/{id}:
    get:
      tags:
      - vinculacion_docente
      description: get VinculacionDocente by id
      operationId: VinculacionDocenteController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VinculacionDocente'
        "404":
          description: not found resource
    put:
      tags:
      - vinculacion_docente
      description: update the VinculacionDocente
      operationId: VinculacionDocenteController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for VinculacionDocente content
        required: true
        schema:
          $ref: '#/definitions/models.VinculacionDocente'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VinculacionDocente'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - vinculacion_docente
      description: delete the VinculacionDocente
      operationId: VinculacionDocenteController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
  /vinculacion_docente/InsertarVinculaciones:
    post:
      tags:
      - vinculacion_docente
      description: create VinculacionDocente
      operationId: VinculacionDocenteController.Post
      responses:
        "201":
          description: '{int}'
        "400":
          description: the request contains incorrect syntax
  /vinculacion_docente/get_total_contratos_x_resolucion/{id_resolucion}/{dedicacion}:
    get:
      tags:
      - vinculacion_docente
      description: Retorna el valor total de la contratación para la resolución
      operationId: VinculacionDocenteController.GetTotalContratosXResolucion
      parameters:
      - in: query
        name: id_resolucion
        description: nomina a listar
        type: string
      responses:
        "201":
          description: ""
          schema:
            format: int64
            type: integer
        "403":
          description: body is empty
  /vinculacion_docente/get_valores_totales_x_disponibilidad/{anio}/{periodo}/{id_disponibilidad}:
    get:
      tags:
      - vinculacion_docente
      description: se obtiene el valor total que ha sido apartado para cierta disponibilidad
      operationId: VinculacionDocenteController.GetValoresTotalesPorDisponibilidad
      parameters:
      - in: path
        name: anio
        description: "true"
        type: string
      - in: path
        name: periodo
        description: "true"
        type: string
      - in: path
        name: id_disponibilidad
        description: "true"
        type: string
      responses:
        "200":
          description: '{int}'
        "403":
          description: ""
  /vinculacion_docente/get_vinculaciones_agrupadas/{id_resolucion}:
    get:
      tags:
      - vinculacion_docente
      description: get vinculaciones agrupadas por docente
      operationId: VinculacionDocenteController.GetVinculacionesAgrupadas
      parameters:
      - in: path
        name: id_resolucion
        description: "true"
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.VinculacionDocente'
        "403":
          description: :id is empty
  /zona_upc/:
    get:
      tags:
      - zona_upc
      description: get ZonaUpc
      operationId: ZonaUpcController.Get All
      parameters:
      - in: query
        name: query
        description: Filter. e.g. col1:v1,col2:v2 ...
        type: string
      - in: query
        name: fields
        description: Fields returned. e.g. col1,col2 ...
        type: string
      - in: query
        name: sortby
        description: Sorted-by fields. e.g. col1,col2 ...
        type: string
      - in: query
        name: order
        description: Order corresponding to each sortby field, if single value, apply
          to all sortby fields. e.g. desc,asc ...
        type: string
      - in: query
        name: limit
        description: Limit the size of result set. Must be an integer
        type: string
      - in: query
        name: offset
        description: Start position of result set. Must be an integer
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ZonaUpc'
        "404":
          description: not found resource
    post:
      tags:
      - zona_upc
      description: create ZonaUpc
      operationId: ZonaUpcController.Post
      parameters:
      - in: body
        name: body
        description: body for ZonaUpc content
        required: true
        schema:
          $ref: '#/definitions/models.ZonaUpc'
      responses:
        "201":
          description: '{int} models.ZonaUpc'
        "400":
          description: the request contains incorrect syntax
  /zona_upc/{id}:
    get:
      tags:
      - zona_upc
      description: get ZonaUpc by id
      operationId: ZonaUpcController.Get One
      parameters:
      - in: path
        name: id
        description: The key for staticblock
        required: true
        type: string
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ZonaUpc'
        "404":
          description: not found resource
    put:
      tags:
      - zona_upc
      description: update the ZonaUpc
      operationId: ZonaUpcController.Put
      parameters:
      - in: path
        name: id
        description: The id you want to update
        required: true
        type: string
      - in: body
        name: body
        description: body for ZonaUpc content
        required: true
        schema:
          $ref: '#/definitions/models.ZonaUpc'
      responses:
        "200":
          description: ""
          schema:
            $ref: '#/definitions/models.ZonaUpc'
        "400":
          description: the request contains incorrect syntax
    delete:
      tags:
      - zona_upc
      description: delete the ZonaUpc
      operationId: ZonaUpcController.Delete
      parameters:
      - in: path
        name: id
        description: The id you want to delete
        required: true
        type: string
      responses:
        "200":
          description: '{string} delete success!'
        "404":
          description: not found resource
definitions:
  models.ActaInicio:
    title: ActaInicio
    type: object
    properties:
      Descripcion:
        type: string
      FechaFin:
        type: string
        format: datetime
      FechaInicio:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NumeroContrato:
        $ref: '#/definitions/models.ContratoGeneral'
      Usuario:
        type: string
      Vigencia:
        type: integer
        format: int64
  models.ActaRecibido:
    title: ActaRecibido
    type: object
    properties:
      Estado:
        $ref: '#/definitions/models.EstadoActaRecibido'
      FechaRecibido:
        type: string
        format: datetime
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      Revisor:
        type: string
      Sede:
        type: string
  models.ActividadEconomicaNecesidad:
    title: ActividadEconomicaNecesidad
    type: object
    properties:
      ActividadEconomica:
        type: string
      Id:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
  models.ActividadEspecifica:
    title: ActividadEspecifica
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
  models.AmortizacionElemento:
    title: AmortizacionElemento
    type: object
    properties:
      BodegaSalidaBodega:
        $ref: '#/definitions/models.BodegaSalidaBodega'
      Descripcion:
        type: string
      FechaAmortizacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      ValorPorcentaje:
        type: number
        format: double
  models.AmparoContractual:
    title: AmparoContractual
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.Articulo:
    title: Articulo
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Numero:
        type: integer
        format: int64
      Paragrafos:
        type: array
        items:
          $ref: '#/definitions/models.Paragrafo'
      Texto:
        type: string
  models.AsignacionPensionUserRole:
    title: AsignacionPensionUserRole
    type: object
    properties:
      EstadoRolPension:
        $ref: '#/definitions/models.EstadoRolPension'
      FechaFinBeneficioPension:
        type: string
        format: datetime
      FechaInicioBeneficioPension:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Pension:
        $ref: '#/definitions/models.Pension'
      PersonaAsignada:
        type: integer
        format: int64
      Porcentaje:
        type: number
        format: double
      Tutor:
        type: integer
        format: int64
  models.AtributoRecurso:
    title: AtributoRecurso
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Requerido:
        type: boolean
      TextoAtributo:
        type: string
      TipoDato:
        type: integer
        format: int64
  models.Bodega:
    title: Bodega
    type: object
    properties:
      Cantidad:
        type: integer
        format: int64
      ContratoElementoActaRecibido:
        $ref: '#/definitions/models.ContratoElementoActaRecibido'
      Id:
        type: integer
        format: int64
      Salida:
        $ref: '#/definitions/models.Salida'
  models.BodegaSalidaBodega:
    title: BodegaSalidaBodega
    type: object
    properties:
      Bodega:
        $ref: '#/definitions/models.Bodega'
      Cantidad:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      SalidaBodega:
        $ref: '#/definitions/models.SalidaBodega'
  models.CambioVidaUtil:
    title: CambioVidaUtil
    type: object
    properties:
      Descripcion:
        type: string
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Inventario:
        $ref: '#/definitions/models.Inventario'
      VidaUtil:
        type: integer
        format: int64
  models.Catalogo:
    title: Catalogo
    type: object
    properties:
      Activo:
        type: boolean
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Vigencia:
        type: number
        format: double
  models.CatalogoElemento:
    title: CatalogoElemento
    type: object
    properties:
      ElementoCatalogo:
        type: integer
        format: int64
      ElementoCodigo:
        type: integer
        format: int64
      ElementoEstado:
        type: number
        format: double
      ElementoFechaCreacion:
        type: string
        format: datetime
      ElementoGrupoc:
        type: string
      ElementoNombre:
        type: string
      ElementoPadre:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
  models.CatalogoElementoGrupo:
    title: CatalogoElementoGrupo
    type: object
    properties:
      ElementoCatalogo:
        type: integer
        format: int64
      ElementoCodigo:
        type: integer
        format: int64
      ElementoEstado:
        type: number
        format: double
      ElementoFechaCreacion:
        type: string
        format: datetime
      ElementoNombre:
        type: string
      ElementoPadre:
        type: integer
        format: int64
      ElementoTipobien:
        type: number
        format: double
      Id:
        type: integer
        format: int64
  models.ComponenteResolucion:
    title: ComponenteResolucion
    type: object
    properties:
      ComponentePadre:
        $ref: '#/definitions/models.ComponenteResolucion'
      Id:
        type: integer
        format: int64
      Numero:
        type: integer
        format: int64
      ResolucionId:
        $ref: '#/definitions/models.Resolucion'
      Texto:
        type: string
      TipoComponente:
        type: string
  models.ConceptoNomina:
    title: ConceptoNomina
    type: object
    properties:
      AliasConcepto:
        type: string
      Id:
        type: integer
        format: int64
      NaturalezaConcepto:
        $ref: '#/definitions/models.NaturalezaConceptoNomina'
      NombreConcepto:
        type: string
      TipoConcepto:
        $ref: '#/definitions/models.TipoConceptoNomina'
  models.ConceptoNominaPorPersona:
    title: ConceptoNominaPorPersona
    type: object
    properties:
      Activo:
        type: boolean
      Concepto:
        $ref: '#/definitions/models.ConceptoNomina'
      FechaDesde:
        type: string
        format: datetime
      FechaHasta:
        type: string
        format: datetime
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nomina:
        $ref: '#/definitions/models.Nomina'
      NumCuotas:
        type: number
        format: double
      Persona:
        type: integer
        format: int64
      ValorNovedad:
        type: number
        format: double
  models.Contrato:
    title: Contrato
    type: object
    properties:
      Condiciones:
        type: string
      Contratista:
        type: integer
        format: int64
      FechaRegistro:
        type: string
        format: datetime
      FechaSuscripcion:
        type: string
        format: datetime
      FormaPago:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      LugarEjecucion:
        type: integer
        format: int64
      NumeroContrato:
        type: number
        format: double
      Observaciones:
        type: string
      TipoContrato:
        type: integer
        format: int64
      TipoMoneda:
        type: integer
        format: int64
      Valor:
        type: number
        format: double
      ValorTasaCambio:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
  models.ContratoDisponibilidad:
    title: ContratoDisponibilidad
    type: object
    properties:
      Estado:
        type: boolean
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NumeroCdp:
        type: integer
        format: int64
      NumeroContrato:
        type: string
      Vigencia:
        type: integer
        format: int64
      VigenciaCdp:
        type: integer
        format: int64
  models.ContratoElementoActaRecibido:
    title: ContratoElementoActaRecibido
    type: object
    properties:
      ActaRecibido:
        $ref: '#/definitions/models.ActaRecibido'
      Cantidad:
        type: integer
        format: int64
      ContratoElemento:
        type: integer
        format: int64
      Elemento:
        type: string
      Id:
        type: integer
        format: int64
      Marca:
        type: string
      Serie:
        type: string
      SubgrupoCatalogo:
        $ref: '#/definitions/models.SubgrupoCatalogo'
      Unidad:
        type: integer
        format: int64
      VidaUtil:
        type: integer
        format: int64
  models.ContratoEstado:
    title: ContratoEstado
    type: object
    properties:
      Estado:
        $ref: '#/definitions/models.EstadoContrato'
      FechaRegistro:
        type: string
      Id:
        type: integer
        format: int64
      NumeroContrato:
        type: string
      Usuario:
        type: string
      Vigencia:
        type: integer
        format: int64
  models.ContratoGeneral:
    title: ContratoGeneral
    type: object
    properties:
      ClaseContratista:
        type: integer
        format: int64
      ClausulaRegistroPresupuestal:
        type: boolean
      Condiciones:
        type: string
      Contratista:
        type: integer
        format: int64
      Convenio:
        type: string
      DependenciaSolicitante:
        type: string
      DescripcionFormaPago:
        type: string
      Estado:
        type: boolean
      FechaRegistro:
        type: string
        format: datetime
      FormaPago:
        $ref: '#/definitions/models.Parametros'
      Id:
        type: string
      Justificacion:
        type: string
      LugarEjecucion:
        $ref: '#/definitions/models.LugarEjecucion'
      ModalidadSeleccion:
        type: integer
        format: int64
      NumeroCdp:
        type: integer
        format: int64
      NumeroConstancia:
        type: integer
        format: int64
      NumeroSolicitudNecesidad:
        type: integer
        format: int64
      ObjetoContrato:
        type: string
      Observaciones:
        type: string
      OrdenadorGasto:
        type: integer
        format: int64
      OrigenPresupueso:
        type: integer
        format: int64
      OrigenRecursos:
        type: integer
        format: int64
      PlazoEjecucion:
        type: integer
        format: int64
      Procedimiento:
        type: integer
        format: int64
      RegimenContratacion:
        type: integer
        format: int64
      RegistroPresupuestal:
        type: integer
        format: int64
      SedeSolicitante:
        type: string
      Supervisor:
        $ref: '#/definitions/models.SupervisorContrato'
      TemaGastoInversion:
        type: integer
        format: int64
      TipoCompromiso:
        type: integer
        format: int64
      TipoControl:
        type: integer
        format: int64
      TipoGasto:
        type: integer
        format: int64
      TipoMoneda:
        type: integer
        format: int64
      TipologiaContrato:
        type: integer
        format: int64
      UnidadEjecucion:
        $ref: '#/definitions/models.Parametros'
      UnidadEjecutora:
        type: integer
        format: int64
      ValorContrato:
        type: number
        format: double
      ValorContratoMe:
        type: number
        format: double
      ValorTasaCambio:
        type: number
        format: double
      VigenciaContrato:
        type: integer
        format: int64
  models.Dedicacion:
    title: Dedicacion
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      NombreDedicacion:
        type: string
  models.DependenciaNecesidad:
    title: DependenciaNecesidad
    type: object
    properties:
      Id:
        type: integer
        format: int64
      JefeDependenciaDestino:
        type: integer
        format: int64
      JefeDependenciaSolicitante:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      OrdenadorGasto:
        type: integer
        format: int64
  models.DetallePreliquidacion:
    title: DetallePreliquidacion
    type: object
    properties:
      Concepto:
        $ref: '#/definitions/models.ConceptoNomina'
      DiasLiquidados:
        type: number
        format: double
      Id:
        type: integer
        format: int64
      NumeroContrato:
        type: string
      Preliquidacion:
        $ref: '#/definitions/models.Preliquidacion'
      TipoPreliquidacion:
        $ref: '#/definitions/models.TipoPreliquidacion'
      ValorCalculado:
        type: number
        format: double
      VigenciaContrato:
        type: integer
        format: int64
  models.DetalleServicioNecesidad:
    title: DetalleServicioNecesidad
    type: object
    properties:
      Cantidad:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      NucleoConocimiento:
        type: integer
        format: int64
      Perfil:
        type: integer
        format: int64
  models.DisponibilidadApropiacionSolicitudRp:
    title: DisponibilidadApropiacionSolicitudRp
    type: object
    properties:
      DisponibilidadApropiacion:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Monto:
        type: number
        format: double
      SolicitudRp:
        $ref: '#/definitions/models.SolicitudRp'
  models.DisponibilidadContrato:
    title: DisponibilidadContrato
    type: object
    properties:
      Contrato:
        $ref: '#/definitions/models.Contrato'
      Disponibilidad:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
  models.DocumentoSoporteActa:
    title: DocumentoSoporteActa
    type: object
    properties:
      ActaRecibido:
        $ref: '#/definitions/models.ActaRecibido'
      Enlace:
        type: string
      Id:
        type: integer
        format: int64
      NumeroDocumento:
        type: string
      TipoDocumentoSoporte:
        $ref: '#/definitions/models.TipoDocumentoSoporte'
  models.Entrada:
    title: Entrada
    type: object
    properties:
      ActaRecibido:
        $ref: '#/definitions/models.ActaRecibido'
      EnlaceSoporte:
        type: string
      Estado:
        $ref: '#/definitions/models.EstadoEntrada'
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NumeroEntrada:
        type: integer
        format: int64
      Observaciones:
        type: string
      Reposicion:
        $ref: '#/definitions/models.Reposicion'
      TipoEntrada:
        $ref: '#/definitions/models.TipoEntrada'
      Vigencia:
        type: number
        format: double
  models.Escalafon:
    title: Escalafon
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      NombreEscalafon:
        type: string
  models.EscalafonPersona:
    title: EscalafonPersona
    type: object
    properties:
      Estado:
        type: boolean
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      IdEscalafon:
        $ref: '#/definitions/models.Escalafon'
      IdPersonaNatural:
        type: number
        format: double
      Observacion:
        type: string
  models.EspecificacionTecnica:
    title: EspecificacionTecnica
    type: object
    properties:
      Cantidad:
        type: integer
        format: int64
      Catalogo:
        type: integer
        format: int64
      Elemento:
        type: string
      Id:
        type: integer
        format: int64
      Iva:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      Unidad:
        type: integer
        format: int64
      Valor:
        type: integer
        format: int64
  models.EstadoActaRecibido:
    title: EstadoActaRecibido
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.EstadoContrato:
    title: EstadoContrato
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.EstadoEntrada:
    title: EstadoEntrada
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.EstadoInventario:
    title: EstadoInventario
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.EstadoNecesidad:
    title: EstadoNecesidad
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: string
  models.EstadoPagoMensual:
    title: EstadoPagoMensual
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.EstadoPreliquidacion:
    title: EstadoPreliquidacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.EstadoResolucion:
    title: EstadoResolucion
    type: object
    properties:
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NombreEstado:
        type: string
  models.EstadoRolPension:
    title: EstadoRolPension
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.FuenteFinanciacionRubroNecesidad:
    title: FuenteFinanciacionRubroNecesidad
    type: object
    properties:
      Apropiacion:
        type: integer
        format: int64
      FuenteFinanciamiento:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      MontoParcial:
        type: number
        format: double
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
  models.Grupo:
    title: Grupo
    type: object
    properties:
      CuentaEntrada:
        type: number
        format: double
      CuentaSalida:
        type: number
        format: double
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoBien:
        $ref: '#/definitions/models.TipoBien'
  models.Inventario:
    title: Inventario
    type: object
    properties:
      Contratista:
        type: integer
        format: int64
      ContratoElementoActaRecibido:
        $ref: '#/definitions/models.ContratoElementoActaRecibido'
      EstadoInventario:
        $ref: '#/definitions/models.EstadoInventario'
      FechaValidacionContratista:
        type: string
        format: datetime
      FechaValidacionFuncionario:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Observaciones:
        type: string
      Placa:
        type: string
      Salida:
        $ref: '#/definitions/models.Salida'
      ValidacionContratista:
        type: boolean
      ValidacionElemento:
        type: boolean
  models.InventarioMovimiento:
    title: InventarioMovimiento
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Inventario:
        $ref: '#/definitions/models.Inventario'
      Movimiento:
        $ref: '#/definitions/models.Movimiento'
  models.Ipc:
    title: Ipc
    type: object
    properties:
      Año:
        type: integer
        format: int64
      Clave:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      IndiceAcumulado:
        type: number
        format: double
      Inventario:
        $ref: '#/definitions/models.Inventario'
      Ipc:
        type: number
        format: double
      Mes:
        type: integer
        format: int64
      VariacionAnual:
        type: number
        format: double
      VariacionAñoCorrido:
        type: number
        format: double
      VariacionMensual:
        type: number
        format: double
  models.ItemInforme:
    title: ItemInforme
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.ItemInformeTipoContrato:
    title: ItemInformeTipoContrato
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ItemInforme:
        $ref: '#/definitions/models.ItemInforme'
      TipoContrato:
        type: integer
        format: int64
  models.LugarEjecucion:
    title: LugarEjecucion
    type: object
    properties:
      Ciudad:
        type: number
        format: double
      Dependencia:
        type: string
      Direccion:
        type: string
      Id:
        type: integer
        format: int64
      Sede:
        type: string
  models.MarcoLegal:
    title: MarcoLegal
    type: object
    properties:
      Enlace:
        type: string
      Id:
        type: integer
        format: int64
      NombreDocumento:
        type: string
  models.MarcoLegalNecesidad:
    title: MarcoLegalNecesidad
    type: object
    properties:
      Id:
        type: integer
        format: int64
      MarcoLegal:
        $ref: '#/definitions/models.MarcoLegal'
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
  models.ModalidadSeleccion:
    title: ModalidadSeleccion
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: string
  models.ModificacionResolucion:
    title: ModificacionResolucion
    type: object
    properties:
      Id:
        type: integer
        format: int64
      ResolucionAnterior:
        type: integer
        format: int64
      ResolucionNueva:
        type: integer
        format: int64
  models.ModificacionVinculacion:
    title: ModificacionVinculacion
    type: object
    properties:
      Horas:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      ModificacionResolucion:
        $ref: '#/definitions/models.ModificacionResolucion'
      VinculacionDocenteCancelada:
        $ref: '#/definitions/models.VinculacionDocente'
      VinculacionDocenteRegistrada:
        $ref: '#/definitions/models.VinculacionDocente'
  models.Movimiento:
    title: Movimiento
    type: object
    properties:
      BajaAprobada:
        type: boolean
      Consecutivo:
        type: integer
        format: int64
      EspacioFisico:
        type: integer
        format: int64
      FechaAprobacion:
        type: string
        format: datetime
      FechaRegistro:
        type: string
        format: datetime
      Funcionario:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      JustificacionAprobacionBaja:
        type: string
      Observacion:
        type: string
      SubtipoMovimiento:
        $ref: '#/definitions/models.SubtipoMovimiento'
      Vigencia:
        type: number
        format: double
  models.NaturalezaConceptoNomina:
    title: NaturalezaConceptoNomina
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.Necesidad:
    title: Necesidad
    type: object
    properties:
      AgotarPresupuesto:
        type: boolean
      AnalisisRiesgo:
        type: string
      DependenciaReversa:
        type: array
        items:
          $ref: '#/definitions/models.DependenciaNecesidad'
      DiasDuracion:
        type: number
        format: double
      EstadoNecesidad:
        $ref: '#/definitions/models.EstadoNecesidad'
      EstudioMercado:
        type: string
      FechaModificacion:
        type: string
        format: datetime
      FechaSolicitud:
        type: string
        format: datetime
      FuenteReversa:
        type: array
        items:
          $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
      Id:
        type: integer
        format: int64
      Justificacion:
        type: string
      JustificacionAnulacion:
        type: string
      JustificacionRechazo:
        type: string
      ModalidadSeleccion:
        $ref: '#/definitions/models.ModalidadSeleccion'
      Numero:
        type: integer
        format: int64
      NumeroElaboracion:
        type: integer
        format: int64
      Objeto:
        type: string
      PlanAnualAdquisiciones:
        type: integer
        format: int64
      ProductoReversa:
        type: array
        items:
          $ref: '#/definitions/models.ProductoRubroNecesidad'
      Supervisor:
        type: integer
        format: int64
      TipoContratoNecesidad:
        $ref: '#/definitions/models.TipoContratoNecesidad'
      TipoFinanciacionNecesidad:
        $ref: '#/definitions/models.TipoFinanciacionNecesidad'
      TipoNecesidad:
        $ref: '#/definitions/models.TipoNecesidad'
      UnicoPago:
        type: boolean
      UnidadEjecutora:
        type: integer
        format: int64
      Valor:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
  models.NecesidadProcesoExterno:
    title: NecesidadProcesoExterno
    type: object
    properties:
      Consecutivo:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      ProcesoExterno:
        type: integer
        format: int64
      TipoNecesidad:
        $ref: '#/definitions/models.TipoNecesidad'
  models.NecesidadRechazada:
    title: NecesidadRechazada
    type: object
    properties:
      Fecha:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Justificacion:
        type: string
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
  models.Nomina:
    title: Nomina
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      TipoNomina:
        $ref: '#/definitions/models.TipoNomina'
  models.Object:
    title: Object
    type: object
    properties:
      ObjectId:
        type: string
      PlayerName:
        type: string
      Score:
        type: integer
        format: int64
  models.OpcionAtributoRecurso:
    title: OpcionAtributoRecurso
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumerOrden:
        type: number
        format: double
      RecursoAtributo:
        $ref: '#/definitions/models.RecursoAtributo'
  models.Pago:
    title: Pago
    type: object
    properties:
      DetalleLiquidacion:
        type: integer
        format: int64
      EntidadPago:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      PeriodoPago:
        $ref: '#/definitions/models.PeriodoPago'
      TipoPago:
        $ref: '#/definitions/models.TipoPago'
      Valor:
        type: number
        format: double
  models.PagoMensual:
    title: PagoMensual
    type: object
    properties:
      Ano:
        type: number
        format: double
      CargoResponsable:
        type: string
      EstadoPagoMensual:
        $ref: '#/definitions/models.EstadoPagoMensual'
      FechaModificacion:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Mes:
        type: number
        format: double
      NumeroContrato:
        type: string
      Persona:
        type: string
      Responsable:
        type: string
      VigenciaContrato:
        type: number
        format: double
  models.Paragrafo:
    title: Paragrafo
    type: object
    properties:
      Id:
        type: integer
        format: int64
      Numero:
        type: integer
        format: int64
      Texto:
        type: string
  models.ParametroContraloria:
    title: ParametroContraloria
    type: object
    properties:
      Activo:
        type: boolean
      CodigoContraloria:
        type: string
      Descripcion:
        type: string
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      RelacionParametro:
        $ref: '#/definitions/models.RelacionParametroContraloria'
  models.ParametroContraloriaContrato:
    title: ParametroContraloriaContrato
    type: object
    properties:
      Activo:
        type: boolean
      Contrato:
        $ref: '#/definitions/models.Contrato'
      Id:
        type: integer
        format: int64
      ParametroContraloria:
        $ref: '#/definitions/models.ParametroContraloria'
  models.ParametroEstandar:
    title: ParametroEstandar
    type: object
    properties:
      ClaseParametro:
        type: string
      DescripcionParametro:
        type: string
      Id:
        type: integer
        format: int64
      ValorParametro:
        type: string
  models.Parametros:
    title: Parametros
    type: object
    properties:
      CodigoContraloria:
        type: string
      Descripcion:
        type: string
      EstadoRegistro:
        type: boolean
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      RelParametro:
        $ref: '#/definitions/models.RelacionParametro'
  models.Pension:
    title: Pension
    type: object
    properties:
      FechaPension:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      TipoPension:
        $ref: '#/definitions/models.TipoPension'
      ValorPension:
        type: number
        format: double
  models.PeriodoPago:
    title: PeriodoPago
    type: object
    properties:
      Anio:
        type: number
        format: double
      Id:
        type: integer
        format: int64
      Liquidacion:
        type: integer
        format: int64
      Mes:
        type: number
        format: double
      TipoLiquidacion:
        type: string
  models.PersonaEscalafon:
    title: PersonaEscalafon
    type: object
    properties:
      Escalafon:
        type: string
      Id:
        type: integer
        format: int64
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
  models.Poliza:
    title: Poliza
    type: object
    properties:
      DescripcionPoliza:
        type: string
      EntidadAseguradora:
        type: integer
        format: int64
      Estado:
        type: boolean
      FechaAprobacion:
        type: string
        format: datetime
      FechaFin:
        type: string
        format: datetime
      FechaInicio:
        type: string
        format: datetime
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NumeroContrato:
        type: string
      NumeroPoliza:
        type: string
      Usuario:
        type: string
      Vigencia:
        type: integer
        format: int64
  models.PolizaContrato:
    title: PolizaContrato
    type: object
    properties:
      Activo:
        type: boolean
      Contrato:
        $ref: '#/definitions/models.Contrato'
      DescripcionPoliza:
        type: string
      EntidadAseguradora:
        type: integer
        format: int64
      FechaAprobacion:
        type: string
        format: datetime
      FechaFin:
        type: string
        format: datetime
      FechaInicio:
        type: string
        format: datetime
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NumeroPoliza:
        type: string
  models.Precontratado:
    title: Precontratado
    type: object
    properties:
      Categoria:
        type: string
      Dedicacion:
        type: string
      Documento:
        type: integer
        format: int64
      Expedicion:
        type: string
      HorasSemanales:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      ProyectoCurricular:
        type: integer
        format: int64
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
      Semanas:
        type: integer
        format: int64
      ValorContrato:
        type: number
        format: double
  models.Preliquidacion:
    title: Preliquidacion
    type: object
    properties:
      Ano:
        type: integer
        format: int64
      Descripcion:
        type: string
      EstadoPreliquidacion:
        $ref: '#/definitions/models.EstadoPreliquidacion'
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Mes:
        type: integer
        format: int64
      Nomina:
        $ref: '#/definitions/models.Nomina'
  models.Preliquidacion_x_contratos:
    title: Preliquidacion_x_contratos
    type: object
  models.ProductoRubroNecesidad:
    title: ProductoRubroNecesidad
    type: object
    properties:
      Apropiacion:
        type: integer
        format: int64
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      ProductoRubro:
        type: integer
        format: int64
  models.Profile:
    title: Profile
    type: object
    properties:
      Address:
        type: string
      Age:
        type: integer
        format: int64
      Email:
        type: string
      Gender:
        type: string
  models.RangoEdadUpc:
    title: RangoEdadUpc
    type: object
    properties:
      AplicaGenero:
        type: string
      EdadMax:
        type: number
        format: double
      EdadMin:
        type: number
        format: double
      Id:
        type: integer
        format: int64
  models.Recurso:
    title: Recurso
    type: object
    properties:
      Activo:
        type: boolean
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Recurso:
        $ref: '#/definitions/models.Recurso'
      TipoRecurso:
        $ref: '#/definitions/models.TipoRecurso'
  models.RecursoApropiacion:
    title: RecursoApropiacion
    type: object
    properties:
      Apropiacion:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      Recurso:
        $ref: '#/definitions/models.Recurso'
  models.RecursoAtributo:
    title: RecursoAtributo
    type: object
    properties:
      AtributoRecurso:
        $ref: '#/definitions/models.AtributoRecurso'
      Id:
        type: integer
        format: int64
      Recurso:
        $ref: '#/definitions/models.Recurso'
  models.RelacionContratoEstado:
    title: RelacionContratoEstado
    type: object
    properties:
      Contrato:
        $ref: '#/definitions/models.Contrato'
      EstadoContrato:
        $ref: '#/definitions/models.EstadoContrato'
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Usuario:
        type: integer
        format: int64
  models.RelacionParametro:
    title: RelacionParametro
    type: object
    properties:
      Descripcion:
        type: string
      EstadoRegistro:
        type: boolean
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
  models.RelacionParametroContraloria:
    title: RelacionParametroContraloria
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.RelacionPolizaAmparo:
    title: RelacionPolizaAmparo
    type: object
    properties:
      Activo:
        type: boolean
      Amparo:
        type: integer
        format: int64
      FechaFinal:
        type: string
        format: datetime
      FechaInicio:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      PolizaContrato:
        $ref: '#/definitions/models.PolizaContrato'
      TipoValorAmparo:
        $ref: '#/definitions/models.TipoValorAmparo'
      ValorAmparo:
        type: number
        format: double
  models.Reposicion:
    title: Reposicion
    type: object
    properties:
      Elemento:
        type: string
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Iva:
        type: integer
        format: int64
      Marca:
        type: string
      Movimiento:
        $ref: '#/definitions/models.Movimiento'
      Serie:
        type: string
      Valor:
        type: integer
        format: int64
  models.RequisitoMinimo:
    title: RequisitoMinimo
    type: object
    properties:
      Descripcion:
        type: string
      EspecificacionTecnica:
        $ref: '#/definitions/models.EspecificacionTecnica'
      Id:
        type: integer
        format: int64
  models.Resolucion:
    title: Resolucion
    type: object
    properties:
      ConsideracionResolucion:
        type: string
      Estado:
        type: boolean
      FechaExpedicion:
        type: string
        format: datetime
      FechaRegistro:
        type: string
      Id:
        type: integer
        format: int64
      IdDependencia:
        type: integer
        format: int64
      IdDependenciaFirma:
        type: integer
        format: int64
      IdTipoResolucion:
        $ref: '#/definitions/models.TipoResolucion'
      NumeroResolucion:
        type: string
      NumeroSemanas:
        type: integer
        format: int64
      Objeto:
        type: string
      Periodo:
        type: integer
        format: int64
      PeriodoCarga:
        type: integer
        format: int64
      PreambuloResolucion:
        type: string
      Titulo:
        type: string
      Vigencia:
        type: integer
        format: int64
      VigenciaCarga:
        type: integer
        format: int64
  models.ResolucionCompleta:
    title: ResolucionCompleta
    type: object
    properties:
      Articulos:
        type: array
        items:
          $ref: '#/definitions/models.Articulo'
      Consideracion:
        type: string
      Id:
        type: integer
        format: int64
      Numero:
        type: string
      Preambulo:
        type: string
      Titulo:
        type: string
      Vigencia:
        type: integer
        format: int64
      Vinculacion:
        $ref: '#/definitions/models.ResolucionVinculacionDocente'
  models.ResolucionEstado:
    title: ResolucionEstado
    type: object
    properties:
      Estado:
        $ref: '#/definitions/models.EstadoResolucion'
      FechaRegistro:
        type: string
      Id:
        type: integer
        format: int64
      Resolucion:
        $ref: '#/definitions/models.Resolucion'
      Usuario:
        type: string
  models.ResolucionVinculacionDocente:
    title: ResolucionVinculacionDocente
    type: object
    properties:
      Dedicacion:
        type: string
      Id:
        type: integer
        format: int64
      IdFacultad:
        type: integer
        format: int64
      NivelAcademico:
        type: string
  models.Salida:
    title: Salida
    type: object
    properties:
      Entrada:
        $ref: '#/definitions/models.Entrada'
      EspacioFisico:
        type: integer
        format: int64
      FechaRegistro:
        type: string
        format: datetime
      Funcionario:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
  models.SalidaBodega:
    title: SalidaBodega
    type: object
    properties:
      EspacioFisico:
        type: integer
        format: int64
      FechaRegistro:
        type: string
        format: datetime
      Funcionario:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      NumeroSalida:
        type: integer
        format: int64
      PersonaRecibe:
        type: integer
        format: int64
      Vigencia:
        type: number
        format: double
  models.SolicitudDisponibilidad:
    title: SolicitudDisponibilidad
    type: object
    properties:
      Expedida:
        type: boolean
      FechaSolicitud:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      JustificacionRechazo:
        type: string
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      Numero:
        type: integer
        format: int64
      Vigencia:
        type: number
        format: double
  models.SolicitudRp:
    title: SolicitudRp
    type: object
    properties:
      Cdp:
        type: integer
        format: int64
      Expedida:
        type: boolean
      FechaSolicitud:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      JustificacionRechazo:
        type: string
      Masivo:
        type: boolean
      NumeroCompromiso:
        type: integer
        format: int64
      NumeroContrato:
        type: string
      Proveedor:
        type: integer
        format: int64
      TipoCompromiso:
        type: integer
        format: int64
      Vigencia:
        type: integer
        format: int64
      VigenciaContrato:
        type: integer
        format: int64
  models.SoportePagoMensual:
    title: SoportePagoMensual
    type: object
    properties:
      Aprobado:
        type: boolean
      Documento:
        type: integer
        format: int64
      Id:
        type: integer
        format: int64
      ItemInformeTipoContrato:
        $ref: '#/definitions/models.ItemInformeTipoContrato'
      PagoMensual:
        $ref: '#/definitions/models.PagoMensual'
  models.Subgrupo:
    title: Subgrupo
    type: object
    properties:
      FechaRegistro:
        type: string
        format: datetime
      Grupo:
        $ref: '#/definitions/models.Grupo'
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
  models.SubgrupoCatalogo:
    title: SubgrupoCatalogo
    type: object
    properties:
      Activo:
        type: boolean
      Catalogo:
        $ref: '#/definitions/models.Catalogo'
      Id:
        type: integer
        format: int64
      Subgrupo:
        $ref: '#/definitions/models.Subgrupo'
  models.SubgrupoSubgrupo:
    title: SubgrupoSubgrupo
    type: object
    properties:
      Id:
        type: integer
        format: int64
      SubgrupoHijo:
        $ref: '#/definitions/models.Subgrupo'
      SubgrupoPadre:
        $ref: '#/definitions/models.Subgrupo'
  models.SubtipoMovimiento:
    title: SubtipoMovimiento
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      TipoMovimiento:
        $ref: '#/definitions/models.TipoMovimiento'
  models.SupervisorContrato:
    title: SupervisorContrato
    type: object
    properties:
      Cargo:
        type: string
      DependenciaSupervisor:
        type: string
      DigitoVerificacion:
        type: integer
        format: int64
      Documento:
        type: integer
        format: int64
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      SedeSupervisor:
        type: string
      Tipo:
        type: integer
        format: int64
  models.TipoBien:
    title: TipoBien
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.TipoConceptoNomina:
    title: TipoConceptoNomina
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoContrato:
    title: TipoContrato
    type: object
    properties:
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      IdGrupoTipoContrato:
        type: integer
        format: int64
      TipoContrato:
        type: string
  models.TipoContratoNecesidad:
    title: TipoContratoNecesidad
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: string
  models.TipoDato:
    title: TipoDato
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumerOrden:
        type: number
        format: double
  models.TipoDocumentoSoporte:
    title: TipoDocumentoSoporte
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.TipoEntrada:
    title: TipoEntrada
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.TipoFinanciacionNecesidad:
    title: TipoFinanciacionNecesidad
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: string
  models.TipoMovimiento:
    title: TipoMovimiento
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      Orden:
        type: number
        format: double
  models.TipoNecesidad:
    title: TipoNecesidad
    type: object
    properties:
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Estado:
        type: boolean
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: string
  models.TipoNomina:
    title: TipoNomina
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoPago:
    title: TipoPago
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoPension:
    title: TipoPension
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoPreliquidacion:
    title: TipoPreliquidacion
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TipoRecurso:
    title: TipoRecurso
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumerOrden:
        type: number
        format: double
  models.TipoResolucion:
    title: TipoResolucion
    type: object
    properties:
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      NombreTipoResolucion:
        type: string
  models.TipoUpc:
    title: TipoUpc
    type: object
    properties:
      Id:
        type: integer
        format: int64
      RangoEdadUpc:
        $ref: '#/definitions/models.RangoEdadUpc'
      Resolucion:
        type: string
      Valor:
        type: number
        format: double
      Vigencia:
        type: number
        format: double
      ZonaUpc:
        $ref: '#/definitions/models.ZonaUpc'
  models.TipoValorAmparo:
    title: TipoValorAmparo
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  models.TrEspecificacion:
    title: TrEspecificacion
    type: object
    properties:
      EspecificacionTecnica:
        $ref: '#/definitions/models.EspecificacionTecnica'
      RequisitoMinimo:
        type: array
        items:
          $ref: '#/definitions/models.RequisitoMinimo'
  models.TrNecesidad:
    title: TrNecesidad
    type: object
    properties:
      ActividadEconomicaNecesidad:
        type: array
        items:
          $ref: '#/definitions/models.ActividadEconomicaNecesidad'
      ActividadEspecifica:
        type: array
        items:
          $ref: '#/definitions/models.ActividadEspecifica'
      DependenciaNecesidad:
        $ref: '#/definitions/models.DependenciaNecesidad'
      DetalleServicioNecesidad:
        $ref: '#/definitions/models.DetalleServicioNecesidad'
      Especificacion:
        type: array
        items:
          $ref: '#/definitions/models.TrEspecificacion'
      Ffapropiacion:
        type: array
        items:
          $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
      MarcoLegalNecesidad:
        type: array
        items:
          $ref: '#/definitions/models.MarcoLegalNecesidad'
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
      ProductosNecesidad:
        type: array
        items:
          $ref: '#/definitions/models.ProductoRubroNecesidad'
  models.TrNecesidadDocente:
    title: TrNecesidadDocente
    type: object
    properties:
      DependenciaNecesidad:
        $ref: '#/definitions/models.DependenciaNecesidad'
      Ffapropiacion:
        type: array
        items:
          $ref: '#/definitions/models.FuenteFinanciacionRubroNecesidad'
      MarcoLegalNecesidad:
        type: array
        items:
          $ref: '#/definitions/models.MarcoLegalNecesidad'
      Necesidad:
        $ref: '#/definitions/models.Necesidad'
  models.UpcAdicional:
    title: UpcAdicional
    type: object
    properties:
      Activo:
        type: boolean
      FechaDeNacimiento:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      NumDocumento:
        type: string
      ParametroEstandar:
        type: integer
        format: int64
      PersonaAsociada:
        type: integer
        format: int64
      PrimerApellido:
        type: string
      PrimerNombre:
        type: string
      SegundoApellido:
        type: string
      SegundoNombre:
        type: string
      TipoUpc:
        $ref: '#/definitions/models.TipoUpc'
  models.User:
    title: User
    type: object
    properties:
      Id:
        type: string
      Password:
        type: string
      Profile:
        $ref: '#/definitions/models.Profile'
      Username:
        type: string
  models.ValorizacionElemento:
    title: ValorizacionElemento
    type: object
    properties:
      Descripcion:
        type: string
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Inventario:
        $ref: '#/definitions/models.Inventario'
      Valor:
        type: number
        format: double
  models.VerificacionNicsp:
    title: VerificacionNicsp
    type: object
    properties:
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      Inventario:
        $ref: '#/definitions/models.Inventario'
      ValorMercado:
        type: number
        format: double
      Verificado:
        type: boolean
  models.VigenciaContrato:
    title: VigenciaContrato
    type: object
  models.VinculacionDocente:
    title: VinculacionDocente
    type: object
    properties:
      Categoria:
        type: string
      DependenciaAcademica:
        type: integer
        format: int64
      Disponibilidad:
        type: integer
        format: int64
      Estado:
        type: boolean
      FechaInicio:
        type: string
        format: datetime
      FechaRegistro:
        type: string
        format: datetime
      Id:
        type: integer
        format: int64
      IdDedicacion:
        $ref: '#/definitions/models.Dedicacion'
      IdPersona:
        type: string
      IdProyectoCurricular:
        type: integer
        format: int32
      IdPuntoSalarial:
        type: integer
        format: int64
      IdResolucion:
        $ref: '#/definitions/models.ResolucionVinculacionDocente'
      IdSalarioMinimo:
        type: integer
        format: int64
      NumeroContrato:
        $ref: '#/definitions/sql.NullString'
      NumeroHorasSemanales:
        type: integer
        format: int64
      NumeroRp:
        type: integer
        format: int64
      NumeroSemanas:
        type: integer
        format: int64
      ValorContrato:
        type: number
        format: double
      Vigencia:
        $ref: '#/definitions/sql.NullInt64'
      VigenciaRp:
        type: integer
        format: int64
  models.ZonaUpc:
    title: ZonaUpc
    type: object
    properties:
      Activo:
        type: boolean
      CodigoAbreviacion:
        type: string
      Descripcion:
        type: string
      Id:
        type: integer
        format: int64
      Nombre:
        type: string
      NumeroOrden:
        type: number
        format: double
  msg:
    title: msg
    type: object
  sql.NullInt64:
    title: NullInt64
    type: object
  sql.NullString:
    title: NullString
    type: object
tags:
- name: tipo_bien
  description: |
    TipoBienController operations for TipoBien
- name: estado_inventario
  description: |
    EstadoInventarioController operations for EstadoInventario
- name: salida_bodega
  description: |
    SalidaBodegaController operations for SalidaBodega
- name: bodega
  description: |
    BodegaController operations for Bodega
- name: salida
  description: |
    SalidaController operations for Salida
- name: estado_acta_recibido
  description: |
    EstadoActaRecibidoController operations for EstadoActaRecibido
- name: catalogo
  description: |
    CatalogoController operations for Catalogo
- name: valorizacion_elemento
  description: |
    ValorizacionElementoController operations for ValorizacionElemento
- name: cambio_vida_util
  description: |
    CambioVidaUtilController operations for CambioVidaUtil
- name: tipo_documento_soporte
  description: |
    TipoDocumentoSoporteController operations for TipoDocumentoSoporte
- name: documento_soporte_acta
  description: |
    DocumentoSoporteActaController operations for DocumentoSoporteActa
- name: estado_entrada
  description: |
    EstadoEntradaController operations for EstadoEntrada
- name: reposicion
  description: |
    ReposicionController operations for Reposicion
- name: ipc
  description: |
    IpcController operations for Ipc
- name: verificacion_nicsp
  description: |
    VerificacionNicspController operations for VerificacionNicsp
- name: tipo_entrada
  description: |
    TipoEntradaController operations for TipoEntrada
- name: grupo
  description: |
    GrupoController operations for Grupo
- name: subgrupo_catalogo
  description: |
    SubgrupoCatalogoController operations for SubgrupoCatalogo
- name: acta_recibido
  description: |
    ActaRecibidoController operations for ActaRecibido
- name: contrato_elemento_acta_recibido
  description: |
    ContratoElementoActaRecibidoController operations for ContratoElementoActaRecibido
- name: inventario
  description: |
    InventarioController operations for Inventario
- name: movimiento
  description: |
    MovimientoController operations for Movimiento
- name: inventario_movimiento
  description: |
    InventarioMovimientoController operations for InventarioMovimiento
- name: bodega_salida_bodega
  description: |
    BodegaSalidaBodegaController operations for BodegaSalidaBodega
- name: amortizacion_elemento
  description: |
    AmortizacionElementoController operations for AmortizacionElemento
- name: subgrupo
  description: |
    SubgrupoController operations for Subgrupo
- name: subgrupo_subgrupo
  description: |
    SubgrupoSubgrupoController operations for SubgrupoSubgrupo
- name: tipo_movimiento
  description: |
    TipoMovimientoController operations for TipoMovimiento
- name: subtipo_movimiento
  description: |
    SubtipoMovimientoController operations for SubtipoMovimiento
- name: solicitud_disponibilidad
  description: |
    SolicitudDisponibilidadController operations for SolicitudDisponibilidad
- name: periodo_pago
  description: |
    PeriodoPagoController operations for PeriodoPago
- name: resolucion_vinculacion_docente
  description: |
    ResolucionVinculacionDocenteController operations for ResolucionVinculacionDocente
- name: tipo_upc
  description: |
    TipoUpcController operations for TipoUpc
- name: tipo_resolucion
  description: |
    TipoResolucionController operations for TipoResolucion
- name: preliquidacion
  description: |
    PreliquidacionController operations for Preliquidacion
- name: relacion_parametro_contraloria
  description: |
    RelacionParametroContraloriaController operations for RelacionParametroContraloria
- name: catalogo_elemento_grupo
  description: |
    CatalogoElementoGrupoController operations for CatalogoElementoGrupo
- name: pago
  description: |
    PagoController operations for Pago
- name: solicitud_rp
  description: |
    SolicitudRpController operations for SolicitudRp
- name: asignacion_pension_user_role
  description: |
    AsignacionPensionUserRoleController operations for AsignacionPensionUserRole
- name: estado_resolucion
  description: |
    EstadoResolucionController operations for EstadoResolucion
- name: necesidad_proceso_externo
  description: |
    NecesidadProcesoExternoController operations for NecesidadProcesoExterno
- name: necesidad_rechazada
  description: |
    NecesidadRechazadaController operations for NecesidadRechazada
- name: pension
  description: |
    PensionController operations for Pension
- name: dedicacion
  description: |
    DedicacionController operations for Dedicacion
- name: dependencia_necesidad
  description: |
    DependenciaNecesidadController operations for DependenciaNecesidad
- name: entrada
  description: |
    EntradaController operations for Entrada
- name: actividad_especifica
  description: |
    ActividadEspecificaController operations for ActividadEspecifica
- name: concepto_nomina_por_persona
  description: |
    ConceptoNominaPorPersonaController operations for ConceptoNominaPorPersona
- name: naturaleza_concepto_nomina
  description: |
    NaturalezaConceptoNominaController operations for NaturalezaConceptoNomina
- name: resolucion
  description: |
    ResolucionController operations for Resolucion
- name: contrato
  description: |
    ContratoController operations for Contrato
- name: detalle_preliquidacion
  description: |
    DetallePreliquidacionController operations for DetallePreliquidacion
- name: disponibilidad_apropiacion_solicitud_rp
  description: |
    DisponibilidadApropiacionSolicitudRpController operations for DisponibilidadApropiacionSolicitudRp
- name: disponibilidad_contrato
  description: |
    DisponibilidadContratoController operations for DisponibilidadContrato
- name: poliza_contrato
  description: |
    PolizaContratoController operations for PolizaContrato
- name: relacion_poliza_amparo
  description: |
    RelacionPolizaAmparoController operations for RelacionPolizaAmparo
- name: tipo_contrato_necesidad
  description: |
    TipoContratoNecesidadController operations for TipoContratoNecesidad
- name: estado_rol_pension
  description: |
    EstadoRolPensionController operations for EstadoRolPension
- name: tipo_necesidad
  description: |
    TipoNecesidadController operations for TipoNecesidad
- name: tipo_nomina
  description: |
    TipoNominaController operations for TipoNomina
- name: tipo_preliquidacion
  description: |
    TipoPreliquidacionController operations for TipoPreliquidacion
- name: amparo_contractual
  description: |
    AmparoContractualController operations for AmparoContractual
- name: detalle_servicio_necesidad
  description: |
    DetalleServicioNecesidadController operations for DetalleServicioNecesidad
- name: estado_preliquidacion
  description: |
    EstadoPreliquidacionController operations for EstadoPreliquidacion
- name: tipo_pension
  description: |
    TipoPensionController operations for TipoPension
- name: upc_adicional
  description: |
    UpcAdicionalController operations for UpcAdicional
- name: escalafon
  description: |
    EscalafonController operations for Escalafon
- name: rango_edad_upc
  description: |
    RangoEdadUpcController operations for RangoEdadUpc
- name: concepto_nomina
  description: |
    ConceptoNominaController operations for ConceptoNomina
- name: nomina
  description: |
    NominaController operations for Nomina
- name: parametro_contraloria
  description: |
    ParametroContraloriaController operations for ParametroContraloria
- name: tipo_concepto_nomina
  description: |
    TipoConceptoNominaController operations for TipoConceptoNomina
- name: catalogo_elemento
  description: |
    CatalogoElementoController operations for CatalogoElemento
- name: componente_resolucion
  description: |
    ComponenteResolucionController operations for ComponenteResolucion
- name: parametro_contraloria_contrato
  description: |
    ParametroContraloriaContratoController operations for ParametroContraloriaContrato
- name: resolucion_estado
  description: |
    ResolucionEstadoController operations for ResolucionEstado
- name: tipo_pago
  description: |
    TipoPagoController operations for TipoPago
- name: zona_upc
  description: |
    ZonaUpcController operations for ZonaUpc
- name: escalafon_persona
  description: |
    EscalafonPersonaController operations for EscalafonPersona
- name: estado_contrato
  description: |
    EstadoContratoController operations for EstadoContrato
- name: relacion_contrato_estado
  description: |
    RelacionContratoEstadoController operations for RelacionContratoEstado
- name: tipo_valor_amparo
  description: |
    TipoValorAmparoController operations for TipoValorAmparo
- name: actividad_economica_necesidad
  description: |
    ActividadEconomicaNecesidadController operations for ActividadEconomicaNecesidad
- name: especificacion_tecnica
  description: |
    EspecificacionTecnicaController operations for EspecificacionTecnica
- name: estado_necesidad
  description: |
    EstadoNecesidadController operations for EstadoNecesidad
- name: fuente_financiacion_rubro_necesidad
  description: |
    FuenteFinanciacionRubroNecesidadController operations for FuenteFinanciacionRubroNecesidad
- name: producto_rubro_necesidad
  description: |
    ProductoRubroNecesidadController operations for ProductoRubroNecesidad
- name: marco_legal_necesidad
  description: |
    MarcoLegalNecesidadController operations for MarcoLegalNecesidad
- name: marco_legal
  description: |
    MarcoLegalController operations for MarcoLegal
- name: modalidad_seleccion
  description: |
    ModalidadSeleccionController operations for ModalidadSeleccion
- name: necesidad
  description: |
    NecesidadController operations for Necesidad
- name: parametros
  description: |
    ParametrosController operations for Parametros
- name: parametro_estandar
  description: |
    ParametroEstandarController operations for ParametroEstandar
- name: poliza
  description: |
    PolizaController operations for Poliza
- name: requisito_minimo
  description: |
    RequisitoMinimoController operations for RequisitoMinimo
- name: acta_inicio
  description: |
    ActaInicioController operations for ActaInicio
- name: contrato_disponibilidad
  description: |
    ContratoDisponibilidadController operations for ContratoDisponibilidad
- name: contrato_estado
  description: |
    ContratoEstadoController operations for ContratoEstado
- name: contrato_general
  description: |2
     ContratoGeneralController operations for ContratoGeneral
- name: lugar_ejecucion
  description: |
    LugarEjecucionController operations for LugarEjecucion
- name: relacion_parametro
  description: |
    RelacionParametroController operations for RelacionParametro
- name: tipo_contrato
  description: |
    TipoContratoController operations for TipoContrato
- name: tipo_financiacion_necesidad
  description: |
    TipoFinanciacionNecesidadController operations for TipoFinanciacionNecesidad
- name: tr_necesidad
  description: |
    oprations for Necesidad
- name: tr_necesidad_docente
  description: |
    oprations for Necesidad
- name: vigencia_contrato
  description: |2
     VigenciaContratoController operations for VigenciaContrato
- name: vinculacion_docente
  description: |
    VinculacionDocenteController oprations for VinculacionDocente
- name: supervisor_contrato
  description: |
    SupervisorContratoController operations for SupervisorContrato
- name: pago_mensual
  description: |
    PagoMensualController operations for PagoMensual
- name: estado_pago_mensual
  description: |
    EstadoPagoMensualController operations for EstadoPagoMensual
- name: soporte_pago_mensual
  description: |
    SoportePagoMensualController operations for SoportePagoMensual
- name: tipo_recurso
  description: |
    TipoRecursoController operations for TipoRecurso
- name: recurso
  description: |
    RecursoController operations for Recurso
- name: opcion_atributo_recurso
  description: |
    OpcionAtributoRecursoController operations for OpcionAtributoRecurso
- name: recurso_apropiacion
  description: |
    RecursoApropiacionController operations for RecursoApropiacion
- name: recurso_atributo
  description: |
    RecursoAtributoController operations for RecursoAtributo
- name: tipo_dato
  description: |
    TipoDatoController operations for TipoDato
- name: atributo_recurso
  description: |
    AtributoRecursoController operations for AtributoRecurso
- name: item_informe
  description: |
    ItemInformeController operations for ItemInforme
- name: item_informe_tipo_contrato
  description: |
    ItemInformeTipoContratoController operations for ItemInformeTipoContrato
- name: modificacion_resolucion
  description: |
    ModificacionResolucionController operations for ModificacionResolucion
- name: modificacion_vinculacion
  description: |
    ModificacionVinculacionController operations for ModificacionVinculacion
- name: tr_aprobacion_masiva_documentos
  description: |
    operations for TrAprobacionMasivaDocumentosController
- name: tr_aprobacion_masiva_pagos
  description: |
    operations for TrAprobacionMasivaPagosController
- name: tr_aprobacion_masiva_soportes_contratistas
  description: |
    operations for TrAprobacionMasivaSoportesContratistasController
